<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
    <title>Lei&#x27;s Blog - windows</title>
    <link rel="self" type="application/atom+xml" href="https://blog.dotone.top/tags/windows/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blog.dotone.top"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2022-01-17T00:00:00+00:00</updated>
    <id>https://blog.dotone.top/tags/windows/atom.xml</id>
    <entry xml:lang="zh">
        <title>About rust windows subsystem</title>
        <published>2022-01-17T00:00:00+00:00</published>
        <updated>2022-01-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/rust-windows-subsystem/"/>
        <id>https://blog.dotone.top/blog/it/rust-windows-subsystem/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/rust-windows-subsystem/">&lt;p&gt;Learnt that it need to configure additional attribute for GUI application on windows platform. Otherwise it will launch a console window while launching your GUI application.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rust&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rust &quot;&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span&gt;#![&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;windows_subsystem &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;windows&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Turns on this feature, you&#x27;ll encounter a strange issue. There is no backtrace anymore when your application panics, even though you have configured the &lt;code&gt;RUST_BACKTRACE&lt;&#x2F;code&gt; environment. You will only get this information:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;error:&lt;&#x2F;span&gt;&lt;span&gt; process didn&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;t exit successfully: `target\debug\XXXXXX.exe` (exit code: 101)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s difficult to trace what happened in this situation.&lt;&#x2F;p&gt;
&lt;p&gt;No luck with newest version and nightly rust.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span&gt;&amp;gt; rustc &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;--version --verbose
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rustc&lt;&#x2F;span&gt;&lt;span&gt; 1.58.0 (02072b482 2022-01-11)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;binary:&lt;&#x2F;span&gt;&lt;span&gt; rustc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;commit-hash:&lt;&#x2F;span&gt;&lt;span&gt; 02072b482a8b5357f7fb5e5637444ae30e423c40
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;commit-date:&lt;&#x2F;span&gt;&lt;span&gt; 2022-01-11
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;host:&lt;&#x2F;span&gt;&lt;span&gt; x86_64-pc-windows-msvc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;release:&lt;&#x2F;span&gt;&lt;span&gt; 1.58.0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LLVM&lt;&#x2F;span&gt;&lt;span&gt; version: 13.0.0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;references&quot;&gt;references&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;https:&#x2F;&#x2F;rust-lang.github.io&#x2F;rfcs&#x2F;1665-windows-subsystem.html&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;github.com&#x2F;rust-lang&#x2F;rust&#x2F;issues&#x2F;88576&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>Windows timer resolution</title>
        <published>2021-10-10T00:00:00+00:00</published>
        <updated>2021-10-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/windows-timer-resolution/"/>
        <id>https://blog.dotone.top/blog/it/windows-timer-resolution/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/windows-timer-resolution/">&lt;p&gt;Recently I noticed that the author of libplctagresolved an &lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;windows-timer-resolution&#x2F;(https:&#x2F;&#x2F;github.com&#x2F;libplctag&#x2F;libplctag&#x2F;issues&#x2F;260)&quot;&gt;issue&lt;&#x2F;a&gt; with &lt;code&gt;timeBeginPeriod()&lt;&#x2F;code&gt;. It&#x27;s interesting to learn what happened and timer resolution.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;timer-resolution&quot;&gt;Timer resolution&lt;&#x2F;h2&gt;
&lt;p&gt;The system timer resolution determines how frequently Windows performs two main actions:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Update the timer tick count if a full tick has elapsed.&lt;&#x2F;li&gt;
&lt;li&gt;Check whether a scheduled timer object has expired.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;On Windows 7, the default timer resolution is 15.6 ms.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s say sleep for 50ms, it would have its time delay rounded to some multiple of the tick frequency.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;view-system-clock-resolution&quot;&gt;View system clock resolution&lt;&#x2F;h2&gt;
&lt;p&gt;To view your system clock resolution, you need the &lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;sysinternals&#x2F;downloads&#x2F;clockres&quot;&gt;clockres&lt;&#x2F;a&gt; tool by sysinternals.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;Clockres v2.1 - Clock resolution display utility
&lt;&#x2F;span&gt;&lt;span&gt;Copyright (C) 2016 Mark Russinovich
&lt;&#x2F;span&gt;&lt;span&gt;Sysinternals
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Maximum timer interval: 15.625 ms
&lt;&#x2F;span&gt;&lt;span&gt;Minimum timer interval: 0.500 ms
&lt;&#x2F;span&gt;&lt;span&gt;Current timer interval: 0.997 ms
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It said that it uses &lt;code&gt;GetSystemTimeAdjustment()&lt;&#x2F;code&gt; function.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;timebeginperiod&quot;&gt;&lt;code&gt;timeBeginPeriod()&lt;&#x2F;code&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;As &lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;multimedia&#x2F;timer-resolution?redirectedfrom=MSDN&quot;&gt;the doc&lt;&#x2F;a&gt; said, &lt;code&gt;timeBeginPeriod()&lt;&#x2F;code&gt; allows you requests a minimum resolution for periodic timers. And you must call this function before using timer services. &lt;code&gt;timeBeginPeriod()&lt;&#x2F;code&gt; should be paired with &lt;code&gt;timeEndPeriod()&lt;&#x2F;code&gt;, and they can be nested.&lt;&#x2F;p&gt;
&lt;p&gt;The effect of this function:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Before Windows 10, version 2004&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;affects global windows setting&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;From Windows 10, version 2004&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;for processes that call this function, windows use lowest value requested by any process; For processes which have not called this function, Windows does not guarantee a higher resolution than the default system resolution&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;From Windows 11&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;if a window-owning process becomes fully occluded, minimized, or otherwise invisible or inaudible to the end user, Windows does not guarantee a higher resolution than the default system resolution&lt;&#x2F;p&gt;
&lt;p&gt;The doc also suggest to look at &lt;code&gt;SetProcessInformation()&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;setprocessinformation&quot;&gt;&lt;code&gt;SetProcessInformation()&lt;&#x2F;code&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;code&gt;SetProcessInformation()&lt;&#x2F;code&gt; is available from Windows 8.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;ProcessPowerThrottling enables throttling policies on a process, which can be used to balance out performance and power efficiency in cases where optimal performance is not required&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;when a process enabling PROCESS_POWER_THROTTLING_EXECUTION_SPEED
the process will be classified as EcoQoS (before Windows 11, labeled as LowQoS).&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;if does not explicitly enable PROCESS_POWER_THROTTLING_EXECUTION_SPEED
the system will use its own heuristics to automatically infer a Quality of Service level.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;In Windows 11, if a window-owning process becomes fully occluded, minimized, or otherwise invisible or inaudible to the end user, Windows may automatically ignore the timer resolution request.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;high-precision-timing&quot;&gt;High-precision timing&lt;&#x2F;h2&gt;
&lt;p&gt;Another topic related to timer resolution is high-precision timing.
Some referenced articles described how to get high-precision timing.&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Function&lt;&#x2F;th&gt;&lt;th&gt;precision&lt;&#x2F;th&gt;&lt;th&gt;accuracy&lt;&#x2F;th&gt;&lt;th&gt;comments&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;GetTickCount&lt;&#x2F;td&gt;&lt;td&gt;1ms&lt;&#x2F;td&gt;&lt;td&gt;10ms-55ms&lt;&#x2F;td&gt;&lt;td&gt;-&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;GetSystemTimeAsFileTime&lt;&#x2F;td&gt;&lt;td&gt;100ns&lt;&#x2F;td&gt;&lt;td&gt;not better than GetTickCount&lt;&#x2F;td&gt;&lt;td&gt;-&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;QueryPerformanceCounter&lt;&#x2F;td&gt;&lt;td&gt;1 microsecond or better&lt;&#x2F;td&gt;&lt;td&gt;-&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;GetSystemTimePreciseAsFileTime&lt;&#x2F;td&gt;&lt;td&gt;the highest possible level of precision (&amp;lt;1us)&lt;&#x2F;td&gt;&lt;td&gt;-&lt;&#x2F;td&gt;&lt;td&gt;in Coordinated Universal Time (UTC) format&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Someone said QPC is not reliable, and must run on the same processor core with thread affinity. But microsoft claims that &lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;sysinfo&#x2F;acquiring-high-resolution-time-stamps#faq-about-programming-with-qpc-and-tsc&quot;&gt;thread affinity is  not need as this might affect your application&#x27;s performance&lt;&#x2F;a&gt;. Windows has evolved to improve this, see the next section.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;queryperformancecounter&quot;&gt;QueryPerformanceCounter&lt;&#x2F;h3&gt;
&lt;p&gt;QueryPerformanceCounter depends on hardware timer ( TSC or other motherboard timer) or platform timer. The precision depends on hardware timer resolution and access time, Precision = MAX [ Resolution, AccessTime].&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Version&lt;&#x2F;th&gt;&lt;th&gt;QPC basis&lt;&#x2F;th&gt;&lt;th&gt;Sync across cores&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;XP and 2000&lt;&#x2F;td&gt;&lt;td&gt;TSC (some hardware systems&#x27; BIOS didn&#x27;t indicate the hardware CPU characteristics correctly)&lt;&#x2F;td&gt;&lt;td&gt;some multi-core or multi-processor systems used processors with TSCs that couldn&#x27;t be synchronized across cores&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Vista and Server 2008&lt;&#x2F;td&gt;&lt;td&gt;used a platform counter (High Precision Event Timer (HPET)) or the ACPI Power Management Timer (PM timer)&lt;&#x2F;td&gt;&lt;td&gt;shared between multiple processors&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Windows 7 and Server 2008 R2&lt;&#x2F;td&gt;&lt;td&gt;The majority of Windows 7 and Windows Server 2008 R2 computers have processors with constant-rate TSCs and use these counters as the basis for QPC&lt;&#x2F;td&gt;&lt;td&gt;Windows use TSCs as the basis of QPC on single-clock domain systems where the operating system (or the hypervisor) is able to tightly synchronize the individual TSCs across all processors&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Windows 8, Server 2012 R2&lt;&#x2F;td&gt;&lt;td&gt;TSC&lt;&#x2F;td&gt;&lt;td&gt;The TSC synchronization algorithm was significantly improved to better accommodate large systems with many processors&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;other-solutions&quot;&gt;Other solutions&lt;&#x2F;h2&gt;
&lt;p&gt;Someone discussed using QueryPerformanceCounter and timeGetTime at the same time , so that if the result of QueryPerformanceCounter is not acceptable, use timeGetTime to fixup. &lt;&#x2F;p&gt;
&lt;p&gt;Another solution is using Windows kernel events, such as CreateEvent&#x2F;SetEvent&#x2F;WaitForSingleObject. WaitForSingleObject doesn&#x27;t use a timer if you set infinite timeout. It depends on kernel scheduling inside Windows. &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;GoaLitiuM&#x2F;aff9fbfa4294fa6c1680&quot;&gt;Code&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;&#x2F;h2&gt;
&lt;p&gt;Windows has evolved to be more power-efficient.
Use high time resolution only when it&#x27;s necessary. 
High time resolution might hurt overall system performance and reduce battery run time.&lt;&#x2F;p&gt;
&lt;p&gt;If your application is performance critical, it should call &lt;code&gt;timeBeginPeriod()&lt;&#x2F;code&gt; to request high timer resolution before using timer service; moreover, your application should not have any window in Windows 11. &lt;&#x2F;p&gt;
&lt;p&gt;QPC is typically the best method to use for high resolution timing.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;multimedia&#x2F;timer-resolution?redirectedfrom=MSDN&quot;&gt;Timer Resolution&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;timeapi&#x2F;nf-timeapi-timebeginperiod&quot;&gt;timeBeginPeriod function (timeapi.h)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;api&#x2F;processthreadsapi&#x2F;nf-processthreadsapi-setprocessinformation&quot;&gt;SetProcessInformation function (processthreadsapi.h)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;procthread&#x2F;quality-of-service&quot;&gt;Quality of Service&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows-hardware&#x2F;drivers&#x2F;kernel&#x2F;high-resolution-timers&quot;&gt;High-Resolution Timers&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;archive&#x2F;msdn-magazine&#x2F;2004&#x2F;march&#x2F;implementing-a-high-resolution-time-provider-for-windows&quot;&gt;Implement a Continuously Updating, High-Resolution Time Provider for Windows&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;randomascii.wordpress.com&#x2F;2013&#x2F;07&#x2F;08&#x2F;windows-timer-resolution-megawatts-wasted&#x2F;&quot;&gt;Windows Timer Resolution: Megawatts Wasted&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;GoaLitiuM&#x2F;aff9fbfa4294fa6c1680&quot;&gt;usleep() for Windows (C&#x2F;C++) + set timer resolution to lowest possible supported by system&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;devblogs.microsoft.com&#x2F;oldnewthing&#x2F;20050902-00&#x2F;?p=34333&quot;&gt;Precision is not the same as accuracy&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;download.microsoft.com&#x2F;download&#x2F;3&#x2F;0&#x2F;2&#x2F;3027d574-c433-412a-a8b6-5e0a75d5b237&#x2F;timer-resolution.docx&quot;&gt;Timers, Timer Resolution, and Development of Efficient Code&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;arstechnica.com&#x2F;information-technology&#x2F;2012&#x2F;10&#x2F;better-on-the-inside-under-the-hood-of-windows-8&#x2F;2&#x2F;&quot;&gt;Better on the inside: under the hood of Windows 8&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;windows&#x2F;win32&#x2F;sysinfo&#x2F;acquiring-high-resolution-time-stamps&quot;&gt;Acquiring high-resolution time stamps&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;yiiyee.cn&#x2F;blog&#x2F;2013&#x2F;09&#x2F;01&#x2F;clock-interval&#x2F;&quot;&gt;Windows 系统时钟间隔&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>Build EJDB2 on Windows</title>
        <published>2021-01-22T00:00:00+00:00</published>
        <updated>2021-01-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/build-ejdb2-on-windows/"/>
        <id>https://blog.dotone.top/blog/it/build-ejdb2-on-windows/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/build-ejdb2-on-windows/">&lt;p&gt;最近在给&lt;a href=&quot;http:&#x2F;&#x2F;ejdb.org&quot;&gt;EJDB2&lt;&#x2F;a&gt;写&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Joylei&#x2F;ejdb2-rs&quot;&gt;&lt;code&gt;rust&lt;&#x2F;code&gt;的绑定&lt;&#x2F;a&gt;。本文记录怎么在 Windows 下编译及正常运行&lt;code&gt;EJDB2&lt;&#x2F;code&gt;。
直接到文章末尾看结论。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-zhuang-huan-jing&quot;&gt;安装环境&lt;&#x2F;h2&gt;
&lt;p&gt;参考官方文档安装&lt;code&gt;msys2&lt;&#x2F;code&gt;、&lt;code&gt;mingw64&lt;&#x2F;code&gt;。
安装开发工具链：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;pacman -S --needed base-devel git vim \
&lt;&#x2F;span&gt;&lt;span&gt;      mingw-w64-x86_64-toolchain \
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;bian-yi&quot;&gt;编译&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cmake&lt;&#x2F;span&gt;&lt;span&gt; ..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_C_COMPILER&lt;&#x2F;span&gt;&lt;span&gt;=gcc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_BUILD_TYPE&lt;&#x2F;span&gt;&lt;span&gt;=Release&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_INSTALL_PREFIX&lt;&#x2F;span&gt;&lt;span&gt;=.&#x2F;output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DBUILD_SHARED_LIBS&lt;&#x2F;span&gt;&lt;span&gt;=OFF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DENABLE_HTTP&lt;&#x2F;span&gt;&lt;span&gt;=OFF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make&lt;&#x2F;span&gt;&lt;span&gt; install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;直接编译不通过。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mmap&lt;&#x2F;code&gt;的问题
&lt;code&gt;iowow&lt;&#x2F;code&gt;项目中本身有&lt;code&gt;mman&lt;&#x2F;code&gt;相关代码&lt;code&gt;platform\win32\mman&lt;&#x2F;code&gt;，并且配置了一个&lt;code&gt;CMakeLists.txt&lt;&#x2F;code&gt;来导入&lt;code&gt;mman&#x2F;mman.c&lt;&#x2F;code&gt;源代码，但是这个&lt;code&gt;CMakeLists.txt&lt;&#x2F;code&gt;没有生效，导致不能编译。
在&lt;code&gt;platform\win32\win32.c&lt;&#x2F;code&gt;中添加&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#include &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mman&#x2F;mman.c&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;找不到&lt;code&gt;localtime_r&lt;&#x2F;code&gt;
将&lt;code&gt;log\iwlog.c&lt;&#x2F;code&gt;文件中的&lt;code&gt;localtime_r(&amp;amp;ts_sec, &amp;amp;timeinfo)&lt;&#x2F;code&gt;修改为&lt;code&gt;localtime_s(&amp;amp;timeinfo,&amp;amp;ts_sec)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#ifndef&lt;&#x2F;span&gt;&lt;span&gt; _WIN32
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;localtime_r&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;ts_sec, &amp;amp;timeinfo);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#else
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;localtime_s&lt;&#x2F;span&gt;&lt;span&gt;(&amp;amp;timeinfo, &amp;amp;ts_sec);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;#endif
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;注意：&lt;code&gt;localtime_s&lt;&#x2F;code&gt;和&lt;code&gt;localtime_r&lt;&#x2F;code&gt;的参数的顺序是相反的。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;strndup&lt;&#x2F;code&gt;的问题
链接时加上&lt;code&gt;iberty&lt;&#x2F;code&gt;依赖，不需要改代码。如果不想加上&lt;code&gt;iberty&lt;&#x2F;code&gt;依赖，自己定义一个&lt;code&gt;strndup&lt;&#x2F;code&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;c&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c &quot;&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;char &lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;strndup&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;const char &lt;&#x2F;span&gt;&lt;span&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span&gt;, size_t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;char &lt;&#x2F;span&gt;&lt;span&gt;*dst = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;NULL&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(src)
&lt;&#x2F;span&gt;&lt;span&gt;  {
&lt;&#x2F;span&gt;&lt;span&gt;    size_t src_len = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;strlen&lt;&#x2F;span&gt;&lt;span&gt;(src);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; count = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;min&lt;&#x2F;span&gt;&lt;span&gt;(src_len, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;max&lt;&#x2F;span&gt;&lt;span&gt;(len, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;));
&lt;&#x2F;span&gt;&lt;span&gt;    dst = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;malloc&lt;&#x2F;span&gt;&lt;span&gt;(count + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(dst)
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;strncpy&lt;&#x2F;span&gt;&lt;span&gt;(dst, src, count);
&lt;&#x2F;span&gt;&lt;span&gt;      dst[count] = &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;\0&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; dst;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;做完以上修改，应该可以编译通过了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xiu-fu-yun-xing-bao-cuo&quot;&gt;修复运行报错&lt;&#x2F;h2&gt;
&lt;p&gt;运行编译好的可执行程序，运行报错：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;ERROR iwkv.c:3590 70007|22|0|Threading error with errno status set. (IW_ERROR_THREADING_ERRNO)|Invalid argument
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;example&lt;&#x2F;code&gt;代码一样报错。&lt;&#x2F;p&gt;
&lt;p&gt;虽然可以知道是哪个文件报错，但是 rc 返回值可能来自很多地方，看代码不能直接定位到具体出错的地方。&lt;code&gt;70007&lt;&#x2F;code&gt;在代码中代表&lt;code&gt;pthread&lt;&#x2F;code&gt;相关错误，所以应该是&lt;code&gt;pthread&lt;&#x2F;code&gt;某个函数调用出错了。&lt;&#x2F;p&gt;
&lt;p&gt;搜索之后发现这个错误&lt;code&gt;Invalid argument&lt;&#x2F;code&gt;是函数验证参数时抛出的错误。
于是想用&lt;code&gt;_set_invalid_parameter_handler&lt;&#x2F;code&gt;来&lt;code&gt;hook&lt;&#x2F;code&gt;出错的位置。代码如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rs&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-rs &quot;&gt;&lt;code class=&quot;language-rs&quot; data-lang=&quot;rs&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span&gt;libc::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;c_void&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;FPHandler = Option&amp;lt;
&lt;&#x2F;span&gt;&lt;span&gt;    unsafe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extern &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;C&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        expr: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*const u16&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        func: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*const u16&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        file: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*const u16&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        line: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;        pReserved: c_void,
&lt;&#x2F;span&gt;&lt;span&gt;    ),
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extern &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;_set_invalid_parameter_handler&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fp&lt;&#x2F;span&gt;&lt;span&gt;: FPHandler);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;unsafe fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;u16_ptr_to_string&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ptr&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*const u16&lt;&#x2F;span&gt;&lt;span&gt;) -&amp;gt; OsString {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span&gt;std::os::windows::ffi::OsStringExt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; len = (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;..).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;take_while&lt;&#x2F;span&gt;&lt;span&gt;(|&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span&gt;| *ptr.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;offset&lt;&#x2F;span&gt;&lt;span&gt;(i) != &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; slice = std::slice::from_raw_parts(ptr, len);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    OsString::from_wide(slice)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;unsafe extern &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;C&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;my_handler&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*const u16&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*const u16&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;file&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*const u16&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;line&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;u32&lt;&#x2F;span&gt;&lt;span&gt;,
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pReserved&lt;&#x2F;span&gt;&lt;span&gt;: c_void,
&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use &lt;&#x2F;span&gt;&lt;span&gt;std::ffi::{OsStr, OsString};
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; expr = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;u16_ptr_to_string&lt;&#x2F;span&gt;&lt;span&gt;(expr);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; func = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;u16_ptr_to_string&lt;&#x2F;span&gt;&lt;span&gt;(func);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span&gt; file = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;u16_ptr_to_string&lt;&#x2F;span&gt;&lt;span&gt;(file);
&lt;&#x2F;span&gt;&lt;span&gt;    println!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;expr: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, expr.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;to_str&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;unwrap_or_default&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;span&gt;    println!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;func: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, func.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;to_str&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;unwrap_or_default&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;span&gt;    println!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;file: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, file.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;to_str&lt;&#x2F;span&gt;&lt;span&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;unwrap_or_default&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;span&gt;    println!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;line: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, line);
&lt;&#x2F;span&gt;&lt;span&gt;    panic!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;invalid parameter&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;hook
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;unsafe &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;_set_invalid_parameter_handler&lt;&#x2F;span&gt;&lt;span&gt;(Some(my_handler));
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;但是没有起作用。&lt;&#x2F;p&gt;
&lt;p&gt;试了&lt;code&gt;GDB&lt;&#x2F;code&gt; 调试，不太会用，放弃了。&lt;&#x2F;p&gt;
&lt;p&gt;接下来使用&lt;code&gt;IDA&lt;&#x2F;code&gt;单步调试，跟踪到具体函数为&lt;code&gt;rci = pthread_condattr_setclock(&amp;amp;cattr, CLOCK_MONOTONIC)&lt;&#x2F;code&gt;。
查看&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;msys2-contrib&#x2F;mingw-w64&#x2F;blob&#x2F;78dca70d9c2c355f0aaea3292e0d68c57ad7a5c5&#x2F;mingw-w64-libraries&#x2F;winpthreads&#x2F;src&#x2F;cond.c&quot;&gt;pthread_condattr_setclock 的实现&lt;&#x2F;a&gt;，发现第二个参数&lt;code&gt;clock_id&lt;&#x2F;code&gt;只接受&lt;code&gt;0&lt;&#x2F;code&gt;，而在&lt;code&gt;iowow&lt;&#x2F;code&gt;代码中有定义&lt;code&gt;#define CLOCK_MONOTONIC 1&lt;&#x2F;code&gt;。最简单的做法，在这里条件判断一下传入&lt;code&gt;0&lt;&#x2F;code&gt;。但是根本原因是&lt;code&gt;CMakeLists.txt&lt;&#x2F;code&gt;判断&lt;code&gt;HAVE_CLOCK_MONOTONIC&lt;&#x2F;code&gt;出问题了，判断的相关代码：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmake&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-cmake &quot;&gt;&lt;code class=&quot;language-cmake&quot; data-lang=&quot;cmake&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;check_symbol_exists&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CLOCK_MONOTONIC &lt;&#x2F;span&gt;&lt;span&gt;time.h &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HAVE_CLOCK_MONOTONIC&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(HAVE_CLOCK_MONOTONIC)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;add_definitions&lt;&#x2F;span&gt;&lt;span&gt;(-DIW_HAVE_CLOCK_MONOTONIC)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;endif&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;time.h&lt;&#x2F;code&gt;里面确实没有&lt;code&gt;CLOCK_MONOTONIC&lt;&#x2F;code&gt;，不明白哪里有问题。改成下面的代码：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;cmake&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-cmake &quot;&gt;&lt;code class=&quot;language-cmake&quot; data-lang=&quot;cmake&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;check_symbol_exists&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CLOCK_MONOTONIC &lt;&#x2F;span&gt;&lt;span&gt;time.h &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HAVE_CLOCK_MONOTONIC&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(HAVE_CLOCK_MONOTONIC and WIN32)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;add_definitions&lt;&#x2F;span&gt;&lt;span&gt;(-DIW_HAVE_CLOCK_MONOTONIC)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span&gt;(INFO &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;HAVE_CLOCK_MONOTONIC=1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;endif&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;yi-shang-bai-zuo-liao&quot;&gt;以上白做了&lt;&#x2F;h2&gt;
&lt;p&gt;最后发现以上白做了，只需要安装&lt;code&gt;mingw-w64-x86_64-cmake&lt;&#x2F;code&gt;：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;pacman -S --needed base-devel git vim \
&lt;&#x2F;span&gt;&lt;span&gt;      mingw-w64-x86_64-toolchain \
&lt;&#x2F;span&gt;&lt;span&gt;      mingw-w64-x86_64-cmake
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;然后在&lt;code&gt;mingw64&lt;&#x2F;code&gt;的 shell 执行：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cmake&lt;&#x2F;span&gt;&lt;span&gt; ..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -G &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MSYS Makefiles&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_C_COMPILER&lt;&#x2F;span&gt;&lt;span&gt;=gcc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_BUILD_TYPE&lt;&#x2F;span&gt;&lt;span&gt;=Release&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_INSTALL_PREFIX&lt;&#x2F;span&gt;&lt;span&gt;=.&#x2F;output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DBUILD_SHARED_LIBS&lt;&#x2F;span&gt;&lt;span&gt;=OFF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DENABLE_HTTP&lt;&#x2F;span&gt;&lt;span&gt;=OFF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make&lt;&#x2F;span&gt;&lt;span&gt; install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;不需要改动任何代码就可以正常编译和运行。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jing-tai-lian-jie&quot;&gt;静态链接&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cmake&lt;&#x2F;span&gt;&lt;span&gt; ..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -G &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MSYS Makefiles&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_C_COMPILER&lt;&#x2F;span&gt;&lt;span&gt;=gcc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_BUILD_TYPE&lt;&#x2F;span&gt;&lt;span&gt;=Release&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_INSTALL_PREFIX&lt;&#x2F;span&gt;&lt;span&gt;=.&#x2F;output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DBUILD_SHARED_LIBS&lt;&#x2F;span&gt;&lt;span&gt;=OFF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DENABLE_HTTP&lt;&#x2F;span&gt;&lt;span&gt;=OFF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make&lt;&#x2F;span&gt;&lt;span&gt; install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;自己的项目静态链接需要链接以下库文件：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;ejdb2-2
&lt;&#x2F;span&gt;&lt;span&gt;iowow-1
&lt;&#x2F;span&gt;&lt;span&gt;iberty
&lt;&#x2F;span&gt;&lt;span&gt;winpthread
&lt;&#x2F;span&gt;&lt;span&gt;mingwex
&lt;&#x2F;span&gt;&lt;span&gt;mingw32
&lt;&#x2F;span&gt;&lt;span&gt;gcc
&lt;&#x2F;span&gt;&lt;span&gt;msvcrt
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;dong-tai-lian-jie&quot;&gt;动态链接&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改 &lt;code&gt;cmake&#x2F;modules&#x2F;AddIOWOW.cmake&lt;&#x2F;code&gt;， 把&lt;code&gt;-DBUILD_SHARED_LIBS=OFF&lt;&#x2F;code&gt; 改为&lt;code&gt;-DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;使用自定义&lt;code&gt;toolchain&lt;&#x2F;code&gt;，用&lt;code&gt;mingw64&lt;&#x2F;code&gt;里的工具导出&lt;code&gt;dll&lt;&#x2F;code&gt;和相关定义文件&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;cmake&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-cmake &quot;&gt;&lt;code class=&quot;language-cmake&quot; data-lang=&quot;cmake&quot;&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;#my-win64-tc.cmake
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(WIN32)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;add_custom_target&lt;&#x2F;span&gt;&lt;span&gt;(wintools_init)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;macro&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;add_w32_importlib &lt;&#x2F;span&gt;&lt;span&gt;tgt libname wdir)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;add_custom_command&lt;&#x2F;span&gt;&lt;span&gt;(
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TARGET &lt;&#x2F;span&gt;&lt;span&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;tgt&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;POST_BUILD
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;COMMAND &lt;&#x2F;span&gt;&lt;span&gt;dlltool.exe -d ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;libname&lt;&#x2F;span&gt;&lt;span&gt;}.def  -e ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;libname&lt;&#x2F;span&gt;&lt;span&gt;}.exp -l ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;libname&lt;&#x2F;span&gt;&lt;span&gt;}.lib -D ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;libname&lt;&#x2F;span&gt;&lt;span&gt;}.dll
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WORKING_DIRECTORY &lt;&#x2F;span&gt;&lt;span&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wdir&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    )
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;endmacro&lt;&#x2F;span&gt;&lt;span&gt;(add_w32_importlib)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;endif&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;编译&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cmake&lt;&#x2F;span&gt;&lt;span&gt; ..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -G &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;MSYS Makefiles&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_C_COMPILER&lt;&#x2F;span&gt;&lt;span&gt;=gcc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_BUILD_TYPE&lt;&#x2F;span&gt;&lt;span&gt;=Release&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_INSTALL_PREFIX&lt;&#x2F;span&gt;&lt;span&gt;=.&#x2F;output&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DBUILD_SHARED_LIBS&lt;&#x2F;span&gt;&lt;span&gt;=ON&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DENABLE_HTTP&lt;&#x2F;span&gt;&lt;span&gt;=OFF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; -DCMAKE_TOOLCHAIN_FILE&lt;&#x2F;span&gt;&lt;span&gt;=my-win64-tc.cmake
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;make&lt;&#x2F;span&gt;&lt;span&gt; install
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;自己的项目动态链接需要链接以下库文件：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;libejdb2
&lt;&#x2F;span&gt;&lt;span&gt;libwow
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;zui-hou&quot;&gt;最后&lt;&#x2F;h2&gt;
&lt;p&gt;ejdb2 rust binding: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Joylei&#x2F;ejdb2-rs&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Joylei&#x2F;ejdb2-rs&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;oloroso&#x2F;p&#x2F;12632412.html&quot;&gt;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;oloroso&#x2F;p&#x2F;12632412.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Softmotions&#x2F;ejdb&#x2F;blob&#x2F;master&#x2F;WINDOWS.md&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;Softmotions&#x2F;ejdb&#x2F;blob&#x2F;master&#x2F;WINDOWS.md&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>Profiling rust on windows with Luke Stackwalker</title>
        <published>2020-12-24T00:00:00+00:00</published>
        <updated>2020-12-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/profiling-rust-on-windows-with-Luke-Stackwalker/"/>
        <id>https://blog.dotone.top/blog/it/profiling-rust-on-windows-with-Luke-Stackwalker/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/profiling-rust-on-windows-with-Luke-Stackwalker/">&lt;p&gt;There are great profiling tools for rust, such as &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;profiling&quot;&gt;profiling&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;gperftools&quot;&gt;gperftools&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;crates.io&#x2F;crates&#x2F;flamegraph&quot;&gt;flamegraph&lt;&#x2F;a&gt;, etc.  But I would recommend to try
&lt;a href=&quot;https:&#x2F;&#x2F;sourceforge.net&#x2F;p&#x2F;lukestackwalker&quot;&gt;Luke Stackwalker&lt;&#x2F;a&gt; which also works with rust.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;sourceforge.net&#x2F;p&#x2F;lukestackwalker&quot;&gt;Luke Stackwalker&lt;&#x2F;a&gt; is a GUI-based C&#x2F;C++ source profiler for windows.It samples your application&#x27;s stack while the application is running to find out where the application spends most of its time.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;To get start, you need to turn on debug info for rust.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span&gt;[profile.release]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;debug&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And start &lt;code&gt;Luke Stackwalker&lt;&#x2F;code&gt; with administrator privilege, otherwise it would crash.&lt;&#x2F;p&gt;
&lt;p&gt;When I tried it on my project, everything looks good at first. Most cpu time was cost on &lt;code&gt;WaitForSingleObject&lt;&#x2F;code&gt;, it&#x27;s totally fine, because the code is waiting for incoming http requests. Then I noticed there were abnormally file open calls on the top list, which should be very very low. I found that I mistakenly open the log file every time there is a write operation.&lt;&#x2F;p&gt;
&lt;p&gt;Have a try.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>opencv-rust: libclang not loaded</title>
        <published>2020-09-16T00:00:00+00:00</published>
        <updated>2020-09-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/opencv-rust-libclang-not-loaded/"/>
        <id>https://blog.dotone.top/blog/it/opencv-rust-libclang-not-loaded/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/opencv-rust-libclang-not-loaded/">&lt;p&gt;I failed to build a project when use &lt;code&gt;opencv-rust&lt;&#x2F;code&gt; as dependency on Windows 10. The error message said&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;thread &amp;#39;main&amp;#39; panicked at &amp;#39;a `libclang` shared library is not loaded on this thread&amp;#39;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s a little strange. Because &lt;code&gt;libclang.dll&lt;&#x2F;code&gt; do exist and  can be found in &lt;code&gt;PATH&lt;&#x2F;code&gt; env, and other projects that depends on &lt;code&gt;bindgen&lt;&#x2F;code&gt; can be built successfully.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, found that I have to enable &lt;code&gt;clang-runtime&lt;&#x2F;code&gt;  feature to get the project compiled.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;opencv &lt;&#x2F;span&gt;&lt;span&gt;= { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;features&lt;&#x2F;span&gt;&lt;span&gt;=[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;buildtime-bindgen&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;clang-runtime&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>WSL ubuntu add user</title>
        <published>2020-06-14T00:00:00+00:00</published>
        <updated>2020-06-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/notes/wsl-ubuntu-add-user/"/>
        <id>https://blog.dotone.top/notes/wsl-ubuntu-add-user/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/notes/wsl-ubuntu-add-user/">&lt;h2 id=&quot;da-kai-ming-ling-xing-yi-rootyong-hu-yun-xing-wsl&quot;&gt;打开命令行，以root用户运行wsl&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;C:\WINDOWS\system32&amp;gt;wsl -u root
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;tian-jia-user&quot;&gt;添加 user&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;root@MYPC:&#x2F;mnt&#x2F;c&#x2F;WINDIWS&#x2F;system32# adduser lei
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;按照提示输入用户名和密码&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gei-xin-yong-hu-tian-jia-sudoquan-xian&quot;&gt;给新用户添加sudo权限&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;root@MYPC:&#x2F;mnt&#x2F;c&#x2F;WINDIWS&#x2F;system32# usermod -G sudo lei
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;tui-chu-dang-qian-wsl&quot;&gt;退出当前wsl&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;exit
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;qie-huan-mo-ren-yong-hu&quot;&gt;切换默认用户&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;C:\WINDOWS\system32&amp;gt;ubuntu2004 config --default-user lei
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;这里ubuntu版本是20.04，如果是ubuntu 18.04，那么运行的是&lt;code&gt;ubuntu1804 config --default-user &amp;lt;username&amp;gt;&lt;&#x2F;code&gt;；以此类推，如果是其它发行版，改为相应的发行版名称+版本号。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-dong-xin-de-wsl-yan-zheng-xin-yong-hu-he-sudoshi-fou-you-xiao&quot;&gt;启动新的wsl，验证新用户和sudo是否有效&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;C:\WINDOWS\system32&amp;gt;wsl
&lt;&#x2F;span&gt;&lt;span&gt;lei@MYPC:&#x2F;mnt&#x2F;c&#x2F;WINDIWS&#x2F;system32#sudo apt update
&lt;&#x2F;span&gt;&lt;span&gt;[sudo] password for lei:
&lt;&#x2F;span&gt;&lt;span&gt;Get:1 http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu focal InRelease [265 kB]
&lt;&#x2F;span&gt;&lt;span&gt;Get:2 http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu focal-security InRelease [107 kB]
&lt;&#x2F;span&gt;&lt;span&gt;Get:3 http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu focal-security&#x2F;main amd64 Packages [103 kB]
&lt;&#x2F;span&gt;&lt;span&gt;Get:4 http:&#x2F;&#x2F;security.ubuntu.com&#x2F;ubuntu focal-security&#x2F;main Translation-en [38.5 kB]
&lt;&#x2F;span&gt;&lt;span&gt;Get:5 http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu focal-updates InRelease [107 kB]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;can-kao&quot;&gt;参考&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;windows&#x2F;wsl&#x2F;wsl-config&quot;&gt;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;zh-cn&#x2F;windows&#x2F;wsl&#x2F;wsl-config&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.tenforums.com&#x2F;tutorials&#x2F;128052-add-user-windows-subsystem-linux-wsl-distro-windows-10-a.html&quot;&gt;https:&#x2F;&#x2F;www.tenforums.com&#x2F;tutorials&#x2F;128052-add-user-windows-subsystem-linux-wsl-distro-windows-10-a.html&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.thewindowsclub.com&#x2F;how-to-set-default-user-switch-user-and-remove-a-user-for-wsl&#x2F;&quot;&gt;https:&#x2F;&#x2F;www.thewindowsclub.com&#x2F;how-to-set-default-user-switch-user-and-remove-a-user-for-wsl&#x2F;&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>Windows 无线网卡优化设置</title>
        <published>2020-05-21T00:00:00+00:00</published>
        <updated>2020-05-21T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/notes/windows-wireless-nic-best-settgins/"/>
        <id>https://blog.dotone.top/notes/windows-wireless-nic-best-settgins/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/notes/windows-wireless-nic-best-settgins/">&lt;p&gt;无线网卡默认可能没有启用以下设置，启用后看看速度是不是更快了？&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;首选频带&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;3.首选5GHz频带
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;吞吐量助推器&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;已启用
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>Visual Studio: the project type is not supported by this installation</title>
        <published>2009-07-19T00:00:00+00:00</published>
        <updated>2009-07-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/visual-studio-the-project-type-is-not-supported-by-this-installation/"/>
        <id>https://blog.dotone.top/blog/it/visual-studio-the-project-type-is-not-supported-by-this-installation/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/visual-studio-the-project-type-is-not-supported-by-this-installation/">&lt;p&gt;Windows 7 升级功能很好用。只不过这个过程很费时间。升级之后大部分程序都正常使用。&lt;&#x2F;p&gt;
&lt;p&gt;但是Visual Studio 2008 和 Visual Studio 2010 都罢工了。Visual Studio 2010 打不开界面，一运行就抛出异常，完全卸载后重装解决问题了。&lt;&#x2F;p&gt;
&lt;p&gt;Visual Studio 2008则是不能创建WPF项目和打不开WPF项目，创建WPF项目确定之后没有反应，打开已有的WPF解决方案，则提示“the project type is not supported by this installation”。卸载重装完全不能解决问题，还好搜索到了解决方案：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;devenv &#x2F;setup&lt;&#x2F;li&gt;
&lt;li&gt;regsvr32.exe &amp;quot;%vs80comntools%..\IDE\projectaggregator.dll&amp;quot;&lt;&#x2F;li&gt;
&lt;li&gt;devenv &#x2F;resetskippkgs&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;记录一下备用。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
