<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
    <title>Lei&#x27;s Blog - .Net</title>
    <link rel="self" type="application/atom+xml" href="https://blog.dotone.top/tags/net/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://blog.dotone.top"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2016-03-31T00:00:00+00:00</updated>
    <id>https://blog.dotone.top/tags/net/atom.xml</id>
    <entry xml:lang="zh">
        <title>My First Nuget Package</title>
        <published>2016-03-31T00:00:00+00:00</published>
        <updated>2016-03-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/My-First-Nuget-Package/"/>
        <id>https://blog.dotone.top/blog/it/My-First-Nuget-Package/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/My-First-Nuget-Package/">&lt;p&gt;I published my first nuget package at https:&#x2F;&#x2F;www.nuget.org&#x2F;packages&#x2F;NFly.BitsTransfer&#x2F;1.0.0-alpha1&lt;&#x2F;p&gt;
&lt;p&gt;Although it took me some time to undnerstand how it works, it&#x27;s an interesting expirence.&lt;&#x2F;p&gt;
&lt;p&gt;To get start publishing your own package, you can refer to these two articles:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.nuget.org&#x2F;create&#x2F;creating-and-publishing-a-package&quot;&gt;Creating and Publishing a Package&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;shazwazza.com&#x2F;post&#x2F;multi-targeting-a-single-net-project-to-build-for-different-framework-versions&#x2F;&quot;&gt;Multi targeting a single .Net project to build for different framework versions&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Hope this article can save you some time.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>F#序列化与反序列化</title>
        <published>2010-09-10T00:00:00+00:00</published>
        <updated>2010-09-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/fsharp-ser-de/"/>
        <id>https://blog.dotone.top/blog/it/fsharp-ser-de/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/fsharp-ser-de/">&lt;p&gt;借助F#熟悉一下序列化与反序列化。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;namespace &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;PersonType
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.IO
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.Xml.Serialization
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.Runtime.Serialization.Formatters.Binary
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;[&amp;lt;Serializable&amp;gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= val mutable 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    private name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string val mutable 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private&lt;&#x2F;span&gt;&lt;span&gt; birthday&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;DateTime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;val mutable 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;    private gender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;={&lt;&#x2F;span&gt;&lt;span&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;birthday&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;DateTime.Now&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;gender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;} 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.Name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;r.name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;r.name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt;v 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.Birthday &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;r.birthday &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;r.birthday&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt;v 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.Gender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; r.gender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;r.gender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt;v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;module &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Program&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;[&amp;lt;EntryPoint&amp;gt;] 
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;test&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Birthday&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;DateTime.Now&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Gender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;xml序列化 let xml = new XmlSerializer(typeof&amp;lt;Person&amp;gt;); 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span&gt; writer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; StreamWriter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;D:\fs\Person.xml&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt; xml.Serialize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) 
&lt;&#x2F;span&gt;&lt;span&gt;        writer.Close&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span&gt; reader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; StreamReader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;D:\fs\Person.xml&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;xml.Deserialize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;reader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) :?&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Person 
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; p1.Name p1.Birthday p1.Gender &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;二进制序列化 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;formatter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; BinaryFormatter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;; 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span&gt; writer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; File.OpenWrite&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;D:\fs\Person.dat&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt; formatter.Serialize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;writer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;); 
&lt;&#x2F;span&gt;&lt;span&gt;        writer.Close&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;use&lt;&#x2F;span&gt;&lt;span&gt; reader &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; File.OpenRead&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;D:\fs\Person.dat&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;); 
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; formatter.Deserialize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;reader&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) :?&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Person 
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; p2.Name p2.Birthday p2.Gender 
&lt;&#x2F;span&gt;&lt;span&gt;        Console.Read&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; ignore &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;对于xml序列化来说，不需要类型有Serializable属性。&lt;&#x2F;p&gt;
&lt;p&gt;此外：发现在F#中模块中的类型不能进行二进制序列化操作，所以在上面的程序中我把它放在一个命名空间下。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记十二</title>
        <published>2010-07-19T00:00:00+00:00</published>
        <updated>2010-07-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-12/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-12/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-12/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;索引器：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Addresses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;arr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; ResizeArray&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;(seq{for _ in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.&lt;&#x2F;span&gt;&lt;span&gt;.size &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;})
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;索引器
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.Item &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get idx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; arr.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;idx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set idx value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; arr.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;idx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; value
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.Print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; arr
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; Addresses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;t.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &amp;lt;- &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;abc&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;t.Print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;t.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;] &amp;lt;- &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;def&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;t.Print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;printf &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;t.[1] = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;|&lt;&#x2F;span&gt;&lt;span&gt;t.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;Console.ReadKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;输出：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;seq [&amp;quot;abc&amp;quot;; null; null; null; ...]
&lt;&#x2F;span&gt;&lt;span&gt;seq [&amp;quot;abc&amp;quot;; &amp;quot;def&amp;quot;; null; null; ...]
&lt;&#x2F;span&gt;&lt;span&gt;t.[1] = def
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;切片：&lt;&#x2F;p&gt;
&lt;p&gt;要实现切片只需要实现GetSlice方法，最多可以添加二维的取值范围&lt;&#x2F;p&gt;
&lt;p&gt;一维切片&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Addresses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:seq&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;arr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; ResizeArray&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;(&lt;&#x2F;span&gt;&lt;span&gt;items&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.GetSlice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;downBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;upBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;downVal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; downBound &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; v
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;upVal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; upBound &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; v
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; arr.Count
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subItems &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= seq{ for&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; downVal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;..&lt;&#x2F;span&gt;&lt;span&gt;upVal &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; arr.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]}
&lt;&#x2F;span&gt;&lt;span&gt;        Addresses&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;subItems&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.Print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Addresses:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; arr
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nums &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= seq{for&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; sprintf &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;item&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;};;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;addrs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; Addresses nums
&lt;&#x2F;span&gt;&lt;span&gt;addrs.Print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; addrs.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1.&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;subs.Print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;二维切片&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Points&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:seq&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.GetSlice&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;xDownBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;xUpBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;yDownBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;yUpBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;filter_x x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; xDownBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;xUpBound &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;),&lt;&#x2F;span&gt;&lt;span&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;=&lt;&#x2F;span&gt;&lt;span&gt; down &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;=&lt;&#x2F;span&gt;&lt;span&gt; up
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;),&lt;&#x2F;span&gt;&lt;span&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;=&lt;&#x2F;span&gt;&lt;span&gt; down
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;=&lt;&#x2F;span&gt;&lt;span&gt; up
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;filter_y y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; yDownBound&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;yUpBound &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;),&lt;&#x2F;span&gt;&lt;span&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;=&lt;&#x2F;span&gt;&lt;span&gt; down &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;=&lt;&#x2F;span&gt;&lt;span&gt; up
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;),&lt;&#x2F;span&gt;&lt;span&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;=&lt;&#x2F;span&gt;&lt;span&gt; down
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;=&lt;&#x2F;span&gt;&lt;span&gt; up
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;subItems &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; items &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Seq.filter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(fun (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &amp;amp;&amp;amp;&lt;&#x2F;span&gt;&lt;span&gt; filter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;))
&lt;&#x2F;span&gt;&lt;span&gt;        Points subItems
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Create&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= seq{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0.&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;10 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;yield&lt;&#x2F;span&gt;&lt;span&gt; x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;        Points items
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r.Print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Points:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; items
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;操作符重载&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Vector2DWithOperators&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;float&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;dy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;float&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x.DX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; dx
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x.DY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; dy
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static member (+) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;Vector2DWithOperators &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;Vector2DWithOperators&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;        Vector2DWithOperators&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;v1.DX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; v2.DX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; v1.DY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; v2.DY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static member (-) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;Vector2DWithOperators &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;Vector2DWithOperators&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;        Vector2DWithOperators &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;v1.DX &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; v2.DX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; v1.DY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt; v2.DY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;命名可选参数&lt;&#x2F;p&gt;
&lt;p&gt;命名可选参数只能用于类的构造函数&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.Drawing
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;LabelInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;, ?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;font&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Font&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; defaultArg text &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;font &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= match&lt;&#x2F;span&gt;&lt;span&gt; font &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; new&lt;&#x2F;span&gt;&lt;span&gt; Font&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;FontFamily.GenericSansSerif&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;12.0&lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; v
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x.Text &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; text
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x.Font &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; font
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;gt; LabelInfo (text=&amp;quot;Hello World&amp;quot;);;
&lt;&#x2F;span&gt;&lt;span&gt;val it : LabelInfo =
&lt;&#x2F;span&gt;&lt;span&gt;{Font = [Font: Name=Microsoft Sans Serif, Size=12]; Text = &amp;quot;Hello World&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; LabelInfo(&amp;quot;Goodbye Lenin&amp;quot;);;
&lt;&#x2F;span&gt;&lt;span&gt;val it : LabelInfo =
&lt;&#x2F;span&gt;&lt;span&gt;{Font = [Font: Name=Microsoft Sans Serif, Size=12];  Text = &amp;quot;Goodbye Lenin&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; LabelInfo(font=new Font(FontFamily.GenericMonospace,36.0f),
&lt;&#x2F;span&gt;&lt;span&gt;text=&amp;quot;Imagine&amp;quot;);;
&lt;&#x2F;span&gt;&lt;span&gt;val it : LabelInfo =
&lt;&#x2F;span&gt;&lt;span&gt;{Font = [Font: Name=Courier New, Size=36]; Text = &amp;quot;Imagine&amp;quot;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;属性初始化&lt;&#x2F;p&gt;
&lt;p&gt;用法和命名可选参数类似，都是在构造函数中设置&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.Windows.Forms
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;form &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; Form&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;Visible&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;TopMost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Welcome to F#&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;方法重载&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Vector &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span&gt; DX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;float&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; DY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;float &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v.Length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; sqrt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;v.DX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;v.DX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;v.DY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;v.DY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Point &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span&gt; X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;float&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;float &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static member (-) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Point&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Point&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) = {&lt;&#x2F;span&gt;&lt;span&gt; DX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;p1.X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;p2.X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; DY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;p1.Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;p2.Y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static member (-) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Point&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Vector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) = {&lt;&#x2F;span&gt;&lt;span&gt; X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;p.X&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;v.DX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;p.Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span&gt;v.DY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;gt; let v = {DX=2.0;DY=3.0};;
&lt;&#x2F;span&gt;&lt;span&gt;val v : Vector = {DX = 2.0;DY = 3.0;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let p = {X=3.0;Y=4.0};;
&lt;&#x2F;span&gt;&lt;span&gt;val p : Point = {X = 3.0;Y = 4.0;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; p-p;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : Vector = {DX = 0.0;DY = 0.0;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; p-v;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : Point = {X = 1.0;Y = 1.0;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记十一</title>
        <published>2010-07-18T00:00:00+00:00</published>
        <updated>2010-07-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-11/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-11/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-11/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;yin-yong-biao-da-shi-quotation-expression&quot;&gt;引用表达式(quotation expression)&lt;&#x2F;h3&gt;
&lt;p&gt;引用表达式代表F#抽象语法树&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;@ @&amp;gt;代表泛型的Expr&lt;&#x2F;li&gt;
&lt;li&gt;&amp;lt;@@ @@&amp;gt;代表非泛型的Expr
表达式匹配&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chang-liang-zhi&quot;&gt;常量值&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Int32(i)匹配整型&lt;&#x2F;li&gt;
&lt;li&gt;Double(f)匹配浮点型&lt;&#x2F;li&gt;
&lt;li&gt;String(s)匹配字符串&lt;&#x2F;li&gt;
&lt;li&gt;成员方法或静态方法&lt;&#x2F;li&gt;
&lt;li&gt;Call(obj,method,args)匹配所有的成员方法&lt;&#x2F;li&gt;
&lt;li&gt;lambda表达式
Lambda(var,args)匹配lambda表达式&lt;&#x2F;li&gt;
&lt;li&gt;SpecificCall
SpecificCall用来匹配具体的某一个方法或函数&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span&gt;#r &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;FSharp.PowerPack.dll&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations.Patterns
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations.DerivedPatterns
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let rec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;printExpr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Int32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;整型:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; i
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Double&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;浮点型:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; f
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;字符串:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; s
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; SpecificCall &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;@ (+) @&amp;gt; (_,_,[&lt;&#x2F;span&gt;&lt;span&gt;lft&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;rgt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SpecificCall:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; lft rgt
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Call&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;meth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; sprintf &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%O&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; x
&lt;&#x2F;span&gt;&lt;span&gt;         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(static method)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;方法&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;meth.Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt; args
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Lambda&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)-&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lambda value:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; type:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; var.Name var.Type.Name
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lambda body:&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;      printExpr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _ -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;unwanted expr:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; expr
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;printExpr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;@ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;printExpr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;@&lt;&#x2F;span&gt;&lt;span&gt; System.Console.ReadLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =&lt;&#x2F;span&gt;&lt;span&gt; x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;y
&lt;&#x2F;span&gt;&lt;span&gt;printExpr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;@&lt;&#x2F;span&gt;&lt;span&gt; add &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Console.ReadLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;han-shu-ti-yin-yong-biao-da-shi&quot;&gt;函数体引用表达式&lt;&#x2F;h3&gt;
&lt;p&gt;F#默认不能返回函数或成员方法函数体的引用表达式。
函数加了[&lt;code&gt;&amp;lt;ReflectedDefinition&amp;gt;&lt;&#x2F;code&gt;]属性之后，F#会把函数体的定义持久化到一个表中，嵌入到dll或exe中，这样就可以获取到函数体的引用表达式。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations.Patterns
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations.DerivedPatterns
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;对比注释掉下一行和未注释的输出
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;[&amp;lt;ReflectedDefinition&amp;gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =&lt;&#x2F;span&gt;&lt;span&gt; x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;y
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;task1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let rec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;printExpr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Int32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;整型:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; i
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Double&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;浮点型:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; f
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;字符串:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; s
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; SpecificCall &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;@ (+) @&amp;gt; (_,_,[&lt;&#x2F;span&gt;&lt;span&gt;lft&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;rgt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;SpecificCall:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; lft rgt
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Call&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;meth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; sprintf &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%O&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; x
&lt;&#x2F;span&gt;&lt;span&gt;         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(static method)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;方法:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;meth.Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt; args
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; meth &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt;MethodWithReflectedDefinition&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;         printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;展开&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; meth.Name
&lt;&#x2F;span&gt;&lt;span&gt;         printExpr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _ -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;不能展开：&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; meth.Name
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Lambda&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)-&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lambda value:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; type:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; var.Name var.Type.Name
&lt;&#x2F;span&gt;&lt;span&gt;      printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lambda body:&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;      printExpr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _ -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;unwanted expr:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; expr
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;printExpr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;@&lt;&#x2F;span&gt;&lt;span&gt; add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) @&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Console.ReadLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;ignore
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;[&amp;lt;EntryPoint&amp;gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;main args &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;   task1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;tong-yong-pi-pei&quot;&gt;通用匹配&lt;&#x2F;h3&gt;
&lt;p&gt;可以用来匹配大部分有意义的Expr，减少工作量。可以和前面的其它匹配一起使用。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;SharpVar(var) 匹配值&lt;&#x2F;li&gt;
&lt;li&gt;ShapeLambda(var,body)匹配函数&lt;&#x2F;li&gt;
&lt;li&gt;ShapeCombination(_,exprs)匹配复杂的表达式，分解出所有子表达式&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span&gt;#r &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;FSharp.PowerPack.dll&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Quotations.ExprShape
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let rec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;printExpr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Expr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; ShapeVar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;var:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; var.Name
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; ShapeLambda&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;var&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lambda:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; var.Name
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;lambda body:&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        printExpr body
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; ShapeCombination&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(_,&lt;&#x2F;span&gt;&lt;span&gt;exprs&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;combination:&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        exprs
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; List.iter printExpr
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add a b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; b
&lt;&#x2F;span&gt;&lt;span&gt;printExpr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;@&lt;&#x2F;span&gt;&lt;span&gt; add &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;chuang-jian-biao-da-shi&quot;&gt;创建表达式&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;gt; let expr =
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &amp;lt;@ let x = (1,2)
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; (x,x)@&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; ;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val expr : Expr&amp;lt;(int * int) * (int * int)&amp;gt; =
&lt;&#x2F;span&gt;&lt;span&gt;Let (x, NewTuple (Value (1), Value (2)), NewTuple (x, x))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let expr =
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Expr.Let(new Var(&amp;quot;x&amp;quot;,typeof&amp;lt;int*int&amp;gt;),
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Expr.NewTuple([Expr.Value(1);Expr.Value(2)]),
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Expr.NewTuple([Expr.GlobalVar(&amp;quot;x&amp;quot;);Expr.GlobalVar(&amp;quot;x&amp;quot;)]));;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val expr : Expr = Let (x, NewTuple (Value (1), Value (2)), NewTuple (x, x))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;expression-hole&quot;&gt;Expression Hole&lt;&#x2F;h3&gt;
&lt;p&gt;使用符号在引用表达式中表示一个引用表达式。&lt;&#x2F;p&gt;
&lt;p&gt;%在泛型表达式中使用，%%在非泛型表达式中使用&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;gt; let add a b = &amp;lt;@ %a + %b @&amp;gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;val add : Expr&amp;lt;int&amp;gt; -&amp;gt; Expr&amp;lt;int&amp;gt; -&amp;gt; Expr&amp;lt;int&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; add &amp;lt;@ 1 @&amp;gt; &amp;lt;@ 2 @&amp;gt;;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : Expr&amp;lt;int&amp;gt; =
&lt;&#x2F;span&gt;&lt;span&gt;Call (None, Int32 op_Addition[Int32,Int32,Int32](Int32, Int32),
&lt;&#x2F;span&gt;&lt;span&gt;[Value (1), Value (2)])
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;biao-da-shi-ji-suan&quot;&gt;表达式计算&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span&gt;#r &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;System.Core.dll&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;#r &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;FSharp.PowerPack.dll&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;#r &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;FSharp.PowerPack.Linq.dll&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Microsoft.FSharp.Linq.QuotationEvaluation&lt;&#x2F;span&gt;&lt;span&gt;;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &amp;lt;@ fun (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt;b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;@&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; expr.Compile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;func2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; expr.Eval&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;gt; val expr : Expr&amp;lt;(int * int -&amp;gt; int)&amp;gt; =
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; Lambda (tupledArg,
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; Let (a, TupleGet (tupledArg, 0),
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; Let (b, TupleGet (tupledArg, 1),
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; Call (None, Int32 op_Addition[Int32,Int32,Int32](Int32, Int32),
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; [a, b]))))
&lt;&#x2F;span&gt;&lt;span&gt;val func : (int * int -&amp;gt; int)
&lt;&#x2F;span&gt;&lt;span&gt;val func2 : (int * int -&amp;gt; int)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; func2(1,2);;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; func(1,2);;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 3
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记十</title>
        <published>2010-06-27T00:00:00+00:00</published>
        <updated>2010-06-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-10/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-10/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-10/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;模式匹配&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;模式匹配与switch语句类似，但是它的功能更强大，它是由一系列规则组成的，每个规则返回的类型必须相同。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;模式匹配中使用_作为通配符。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let isTrue c =
&lt;&#x2F;span&gt;&lt;span&gt;   match c with
&lt;&#x2F;span&gt;&lt;span&gt;   | true -&amp;gt; printfn &amp;quot;it&amp;#39;s true&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   | false -&amp;gt; printfn &amp;quot;it&amp;#39;s false&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val isTrue : bool -&amp;gt; unit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; isTrue true;;
&lt;&#x2F;span&gt;&lt;span&gt;it&amp;#39;s true
&lt;&#x2F;span&gt;&lt;span&gt;val it : unit = ()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let num2str x=
&lt;&#x2F;span&gt;&lt;span&gt;   match x with
&lt;&#x2F;span&gt;&lt;span&gt;   | 1 -&amp;gt; &amp;quot;1&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   | 2-&amp;gt; &amp;quot;2&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   | _-&amp;gt; &amp;quot;不在范围内&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val num2str : int -&amp;gt; string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; num2str 1;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : string = &amp;quot;1&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; num2str 5;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : string = &amp;quot;不在范围内&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;匹配失败
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;如果未找到匹配的规则，将抛出异常Microsoft.FSharp.Core.MatchFailureException。如果不想抛出异常，就必须处理所有的情况，如果F#编译器发现没有处理所有的情况，会给出一个警告。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let num2str x=
&lt;&#x2F;span&gt;&lt;span&gt;   match x with
&lt;&#x2F;span&gt;&lt;span&gt;   | 1 -&amp;gt; &amp;quot;1&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   | 2 -&amp;gt; &amp;quot;2&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;num2str 1;;
&lt;&#x2F;span&gt;&lt;span&gt;---------^
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;stdin(174,10): warning FS0025: Incomplete pattern matches on this expression. For example, the value &amp;#39;0&amp;#39; may indicate a case not covered by the pattern(s).
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val num2str : int -&amp;gt; string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; num2str 3;;
&lt;&#x2F;span&gt;&lt;span&gt;Microsoft.FSharp.Core.MatchFailureException: The match cases were incomplete
&lt;&#x2F;span&gt;&lt;span&gt;   at FSI_0071.num2str(Int32 x)
&lt;&#x2F;span&gt;&lt;span&gt;   at &amp;lt;StartupCode$FSI_0072&amp;gt;.$FSI_0072.main@()
&lt;&#x2F;span&gt;&lt;span&gt;Stopped due to error
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;命名匹配(Named Patterns)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;可以绑定数据到新的值
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let rec fib x =
&lt;&#x2F;span&gt;&lt;span&gt;   match x with
&lt;&#x2F;span&gt;&lt;span&gt;   | 1 -&amp;gt; 1
&lt;&#x2F;span&gt;&lt;span&gt;   | 2 -&amp;gt; 1
&lt;&#x2F;span&gt;&lt;span&gt;   | y -&amp;gt; fib(x-2) + fib(x-1);;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val fib : int -&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; fib 3;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 2
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; fib 4;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;字面值模式(Literal Pattern)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;可以使用常量进行模式匹配，变量必须有[&amp;lt;Literal&amp;gt;]属性并且首字母必须大写。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;[&amp;lt;Literal&amp;gt;]
&lt;&#x2F;span&gt;&lt;span&gt;let One = 1
&lt;&#x2F;span&gt;&lt;span&gt;let isOne x =
&lt;&#x2F;span&gt;&lt;span&gt;   match x with
&lt;&#x2F;span&gt;&lt;span&gt;   | One -&amp;gt; &amp;quot;true&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   | _ -&amp;gt; &amp;quot;false&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val One : int = 1
&lt;&#x2F;span&gt;&lt;span&gt;val isOne : int -&amp;gt; string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; isOne 1;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : string = &amp;quot;true&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; isOne 2;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : string = &amp;quot;false&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;when条件匹配
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let rec fib x =
&lt;&#x2F;span&gt;&lt;span&gt;   match x with
&lt;&#x2F;span&gt;&lt;span&gt;   | _ when x&amp;lt;=2 -&amp;gt; 1
&lt;&#x2F;span&gt;&lt;span&gt;   | _ -&amp;gt; fib(x-2) + fib(x-1);;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val fib : int -&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; fib 3;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;分组模式
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let rec fib x =
&lt;&#x2F;span&gt;&lt;span&gt;   match x with
&lt;&#x2F;span&gt;&lt;span&gt;   | 1 | 2 -&amp;gt; 1
&lt;&#x2F;span&gt;&lt;span&gt;   | _ -&amp;gt; fib(x-2) + fib(x-1);;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val fib : int -&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; fib 1;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 1
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; fib 2;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;匹配结构化数据
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;元组
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let match_tuple t =
&lt;&#x2F;span&gt;&lt;span&gt;   match t with
&lt;&#x2F;span&gt;&lt;span&gt;   | 4,5 -&amp;gt; &amp;quot;匹配到(4,5)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   | _,9 -&amp;gt; &amp;quot;匹配到(_,9)&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;   | x,y -&amp;gt; sprintf &amp;quot;匹配到(%d,%d)&amp;quot; x y;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val match_tuple : int * int –&amp;gt; string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;列表
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let rec listlen list=
&lt;&#x2F;span&gt;&lt;span&gt;   match list with
&lt;&#x2F;span&gt;&lt;span&gt;   | [] -&amp;gt; 0
&lt;&#x2F;span&gt;&lt;span&gt;   | [_] -&amp;gt; 1
&lt;&#x2F;span&gt;&lt;span&gt;   | [_;_] -&amp;gt; 2
&lt;&#x2F;span&gt;&lt;span&gt;   | hd::rest -&amp;gt; 1 + listlen rest;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val listlen : &amp;#39;a list -&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; listlen [1..5];;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 5
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;可空类型
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;let getValue o=
&lt;&#x2F;span&gt;&lt;span&gt;   match o with
&lt;&#x2F;span&gt;&lt;span&gt;   | Some(5) -&amp;gt; 5
&lt;&#x2F;span&gt;&lt;span&gt;   | Some(x) -&amp;gt; x
&lt;&#x2F;span&gt;&lt;span&gt;   | None -&amp;gt; 0;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val getValue : int option –&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;在函数参数中的模式匹配
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let add (Some(x)) (Some(y)) = x + y;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     | Some(5) -&amp;gt; 5
&lt;&#x2F;span&gt;&lt;span&gt;-------------------^^^^^^^
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;stdin(244,20): warning FS0025: Incomplete pattern matches on this expression. For example, the value &amp;#39;None&amp;#39; may indicate a case not covered by the pattern(s).
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     | Some(5) -&amp;gt; 5
&lt;&#x2F;span&gt;&lt;span&gt;---------^^^^^^^
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;stdin(244,10): warning FS0025: Incomplete pattern matches on this expression. For example, the value &amp;#39;None&amp;#39; may indicate a case not covered by the pattern(s).
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val add : int option -&amp;gt; int option –&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; add (Some(4)) (Some(5));;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 9
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记九</title>
        <published>2010-06-27T00:00:00+00:00</published>
        <updated>2010-06-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-9/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-9/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-9/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;List.reduce与List.fold&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;List.reduce:以list的第一个元素作为初始值，要求list中至少有一个元素，否则抛出异常System.ArgumentException。聚合的结果的类型必须与list中的元素的类型相同。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;如：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let acc r n = r + n;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val acc : int -&amp;gt; int -&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; List.reduce acc [];;
&lt;&#x2F;span&gt;&lt;span&gt;System.ArgumentException: The input list was empty.
&lt;&#x2F;span&gt;&lt;span&gt;Parameter name: list
&lt;&#x2F;span&gt;&lt;span&gt;   at Microsoft.FSharp.Collections.ListModule.Reduce[T](FSharpFunc`2 reduction, FSharpList`1 list)
&lt;&#x2F;span&gt;&lt;span&gt;   at &amp;lt;StartupCode$FSI_0006&amp;gt;.$FSI_0006.main@()
&lt;&#x2F;span&gt;&lt;span&gt;Stopped due to error
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; List.reduce acc [1];;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 1
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; List.reduce acc [1..5];;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 15
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let acc (r:string) n = r + n.ToString();;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val acc : string -&amp;gt; &amp;#39;a -&amp;gt; string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; List.reduce acc [1..5];;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;List.reduce acc [1..5];;
&lt;&#x2F;span&gt;&lt;span&gt;----------------^^^^^^
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;stdin(11,17): error FS0001: The type &amp;#39;string&amp;#39; does not support any operators named &amp;#39;get_One&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;List.fold:需要指定初始值，聚合结果的类型不必与list中的元素的类型相同，list也可以为空集合。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; List.fold acc &amp;quot;&amp;quot; [];;
&lt;&#x2F;span&gt;&lt;span&gt;val it : string = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; List.fold acc &amp;quot;&amp;quot; [1..5];;
&lt;&#x2F;span&gt;&lt;span&gt;val it : string = &amp;quot;12345&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;函数编程语言关键特征：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;不可变数据
&lt;&#x2F;span&gt;&lt;span&gt;组合使用函数
&lt;&#x2F;span&gt;&lt;span&gt;函数可用作数据
&lt;&#x2F;span&gt;&lt;span&gt;延迟计算
&lt;&#x2F;span&gt;&lt;span&gt;模式匹配
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;匿名函数&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;C#中叫lambda表达式
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let add = fun x y-&amp;gt; x+y
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;add 3 4
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;部分函数&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;&amp;gt; let add x y = x + y;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val add : int -&amp;gt; int -&amp;gt; int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let part = add 3;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val part : (int -&amp;gt; int)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let c = part 4;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val c : int = 7
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;在C#中进行类似的操作：
&lt;&#x2F;span&gt;&lt;span&gt;             Func&amp;lt;int,int,int&amp;gt; add = (x,y)=&amp;gt;x+y;
&lt;&#x2F;span&gt;&lt;span&gt;             Func&amp;lt;int,int&amp;gt; part = y=&amp;gt;add(3,y);
&lt;&#x2F;span&gt;&lt;span&gt;             int c = part(4);
&lt;&#x2F;span&gt;&lt;span&gt;             Console.WriteLine(c);如果只有一个参数，可以使用匿名部分函数来避免使用lambda表达式：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; List.iter (printfn &amp;quot;item is %d\r\n&amp;quot;) [1..5];;
&lt;&#x2F;span&gt;&lt;span&gt;item is 1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;item is 2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;item is 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;item is 4
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;item is 5
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val it : unit = ()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pipe-Forward Operator（|&amp;gt;）&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;可以把调整书写顺序，把最后一个参数写在前面，使得代码看起来更顺畅和简单。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let compute dir =
&lt;&#x2F;span&gt;&lt;span&gt;    dir
&lt;&#x2F;span&gt;&lt;span&gt;    |&amp;gt;Directory.GetFiles
&lt;&#x2F;span&gt;&lt;span&gt;    |&amp;gt;Array.map (fun file-&amp;gt; new FileInfo(file))
&lt;&#x2F;span&gt;&lt;span&gt;    |&amp;gt;Array.map (fun info-&amp;gt;info.Length)
&lt;&#x2F;span&gt;&lt;span&gt;    |&amp;gt;Array.sum;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val compute : string -&amp;gt; int64
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; compute @&amp;quot;D:\&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int64 = 2220474411L
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let computeOrdered dir=
&lt;&#x2F;span&gt;&lt;span&gt;    Array.sum (
&lt;&#x2F;span&gt;&lt;span&gt;        Array.map (fun (info:FileInfo)-&amp;gt;info.Length)
&lt;&#x2F;span&gt;&lt;span&gt;            (Array.map (fun file-&amp;gt;new FileInfo(file))
&lt;&#x2F;span&gt;&lt;span&gt;                (Directory.GetFiles dir)
&lt;&#x2F;span&gt;&lt;span&gt;            )
&lt;&#x2F;span&gt;&lt;span&gt;    );;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val computeOrdered : string -&amp;gt; int64
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; computeOrdered @&amp;quot;D:\&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int64 = 2220474411L
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Forward composition operator（&amp;gt;&amp;gt;）&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;把嵌套调用的函数组合成一个从左到右的顺序调用的函数，它不需要在定义时指定参数，它的参数是第一个函数的参数：let f g x = f(g(x))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let computeComposed =
&lt;&#x2F;span&gt;&lt;span&gt;    Directory.GetFiles
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;gt;&amp;gt;Array.map (fun file-&amp;gt; new FileInfo(file))
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;gt;&amp;gt;Array.map (fun info-&amp;gt;info.Length)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;gt;&amp;gt;Array.sum;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val computeComposed : (string -&amp;gt; int64)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; computeComposed @&amp;quot;D:\&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int64 = 2220474411L
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Pipe-backward operator（&amp;lt;|）
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;用于调整运算的优先级，使&amp;lt;|右边部分先计算，可以省掉一对括号
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; add 5 (add 1 2);;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 8
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; add 5 &amp;lt;| add 1 2;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int = 8
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Backward composition operator(&amp;lt;&amp;lt;)&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;把嵌套调用的函数组合成一个从右到左的顺序调用的函数，与Forward composition operator（&amp;gt;&amp;gt;）的作用相反；let f g x = g(f(x))
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; let computeBC =
&lt;&#x2F;span&gt;&lt;span&gt;    Array.sum
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&amp;lt;Array.map (fun (info:FileInfo)-&amp;gt;info.Length)
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&amp;lt;Array.map (fun file-&amp;gt; new FileInfo(file))
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&amp;lt;Directory.GetFiles;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;val computeBC : (string -&amp;gt; int64)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; computeBC @&amp;quot;D:\&amp;quot;;;
&lt;&#x2F;span&gt;&lt;span&gt;val it : int64 = 2220474411L
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;可以看出这个顺序和上文中computeOrdered函数中的调用顺序是一致的。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>IL学习(五)</title>
        <published>2010-05-22T00:00:00+00:00</published>
        <updated>2010-05-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/learning-il/learning-il-5/"/>
        <id>https://blog.dotone.top/blog/it/learning-il/learning-il-5/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/learning-il/learning-il-5/">&lt;h2 id=&quot;zhi-zhen&quot;&gt;指针&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;&lt;&#x2F;code&gt;用于托管的指针&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;*&lt;&#x2F;code&gt;用于非托管的指针&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;fei-tuo-guan-zhi-zhen&quot;&gt;非托管指针&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;这个概念借鉴了c和c++
&lt;&#x2F;span&gt;&lt;span&gt;使用没有限制
&lt;&#x2F;span&gt;&lt;span&gt;被执行引擎识别为无符号数
&lt;&#x2F;span&gt;&lt;span&gt;不被垃圾回收器管理
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;指针变量是一个无符号数&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class test
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 *V_0,int32 V_1)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 20
&lt;&#x2F;span&gt;&lt;span&gt;        stloc V_0   &#x2F;&#x2F;将int类型的数值存放在指针变量中
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc V_0   &#x2F;&#x2F;加载数据
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0 &#x2F;&#x2F;获取V_0地址
&lt;&#x2F;span&gt;&lt;span&gt;        stloc V_1   &#x2F;&#x2F;存放在V_1中
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc V_1
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;tong-guo-zhi-zhen-jia-zai-bian-liang&quot;&gt;通过指针加载变量&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class test
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 20
&lt;&#x2F;span&gt;&lt;span&gt;        stloc V_0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0 &#x2F;&#x2F;指针地址
&lt;&#x2F;span&gt;&lt;span&gt;        ldobj int32 &#x2F;&#x2F;加载地址指向的变量
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;ldobj:从栈顶存放的地址加载变量到栈顶&lt;&#x2F;p&gt;
&lt;p&gt;所有的局部变量都创建在栈上，其它的创建在堆上。栈中只能存放数字。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class test
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;测试1&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32) &#x2F;&#x2F;输出栈顶的字符串的地址
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;测试2&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        stloc V_0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        ldobj int32
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class test
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field int32 i
&lt;&#x2F;span&gt;&lt;span&gt;    .field static int32 j
&lt;&#x2F;span&gt;&lt;span&gt;    .method public static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        newobj void test::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;        ldflda int32 test::i &#x2F;&#x2F;载入i的地址
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldsflda int32 test::j &#x2F;&#x2F;载入j的地址
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method instance void .ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;transientzhi-zhen&quot;&gt;transient指针&lt;&#x2F;h2&gt;
&lt;p&gt;这是介于托管和非托管之间的指针，它只能由执行引擎创建。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>IL学习(四)</title>
        <published>2010-05-17T00:00:00+00:00</published>
        <updated>2010-05-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/learning-il/learning-il-4/"/>
        <id>https://blog.dotone.top/blog/it/learning-il/learning-il-4/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/learning-il/learning-il-4/">&lt;h2 id=&quot;jie-kou-xian-zhi&quot;&gt;接口限制&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;接口中所有方法必须是abstract或static&lt;&#x2F;li&gt;
&lt;li&gt;虚方法必须是abstract和public&lt;&#x2F;li&gt;
&lt;li&gt;不能有实例字段&lt;&#x2F;li&gt;
&lt;li&gt;接口不能实例化&lt;&#x2F;li&gt;
&lt;li&gt;接口不能从类继承&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;直接使用call调用接口方法和使用callvirt动态调用的效果是一样的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jie-gou-ti&quot;&gt;结构体&lt;&#x2F;h2&gt;
&lt;p&gt;il不直接支持结构体
引用类型从Object类继承，值类型从ValueType继承&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class value point
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field int32 x
&lt;&#x2F;span&gt;&lt;span&gt;    .field int32 y
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(value class point V_0,value class point V_1)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        initobj value class point
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 point::x
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_1
&lt;&#x2F;span&gt;&lt;span&gt;        initobj value class point
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_1
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 10
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 20
&lt;&#x2F;span&gt;&lt;span&gt;        call instance void point::.ctor(int32,int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;point:x={0},y={1}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_1
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 point::x
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_1
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 point::y
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method instance void .ctor(int32 x,int32 y) il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.1
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 point::x
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.2
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 point::y
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;initobj:用于初始化结构体的字段为0值，它不会调用结构体的构造函数。对于结构体初始化，不用initobj也可以，这样各个字段就得到一个随机值。&lt;&#x2F;p&gt;
&lt;p&gt;结构体也可以有static、virtual和instance方法
《c# to il》书上说值类型在调用virtual方法时只能使用call，不能使用callvirt。但是经验证是可以的，可能是.net4中改变了规则。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class interface IFly
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public abstract instance void fly() il managed{}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class value private auto ansi bird implements IFly
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field private int32 i
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0    &#x2F;&#x2F;this
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4    10
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 bird::i
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method virtual public instance void fly() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;fly&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.1
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(value class bird V_0,class IFly V_1)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        call instance void bird::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        callvirt instance void bird::fly() &#x2F;&#x2F;运行时决定
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        box bird
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;castclass IFly
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        callvirt instance void IFly::fly()
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;zhuang-xiang-yu-chai-xiang&quot;&gt;装箱与拆箱&lt;&#x2F;h2&gt;
&lt;p&gt;装箱：将值类型转换成引用类型进行的操作
拆箱：将引用类型转换成值类型进行的操作&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class value auto ansi sealed point
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field int32 x
&lt;&#x2F;span&gt;&lt;span&gt;    .field int32 y
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(value class point V_0,object V_1,value class point V_2)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 10
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 20
&lt;&#x2F;span&gt;&lt;span&gt;        call instance void point::.ctor(int32,int32) &#x2F;&#x2F;调用构造函数
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        call instance void point::print()
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_0
&lt;&#x2F;span&gt;&lt;span&gt;        box point &#x2F;&#x2F;装箱成object对象,栈顶放入对象地址
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        unbox point &#x2F;&#x2F;拆箱，得到新结构体的地址
&lt;&#x2F;span&gt;&lt;span&gt;        ldobj point &#x2F;&#x2F;根据地址装载对象
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.2
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_2
&lt;&#x2F;span&gt;&lt;span&gt;        call instance void point::print()
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method instance void .ctor(int32 x,int32 y) il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0 &#x2F;&#x2F;this
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.1
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 point::x
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.2
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 point::y
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void print() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;point:x={0},y={1}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0 &#x2F;&#x2F;this
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 point::x
&lt;&#x2F;span&gt;&lt;span&gt;        box int32 &#x2F;&#x2F;装箱
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 point::y
&lt;&#x2F;span&gt;&lt;span&gt;        box int32
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;box:装箱&lt;&#x2F;li&gt;
&lt;li&gt;unbox:拆箱&lt;&#x2F;li&gt;
&lt;li&gt;ldobj:从地址加载对象&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>IL学习(三)</title>
        <published>2010-05-05T00:00:00+00:00</published>
        <updated>2010-05-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/learning-il/learning-il-3/"/>
        <id>https://blog.dotone.top/blog/it/learning-il/learning-il-3/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/learning-il/learning-il-3/">&lt;h2 id=&quot;yuan-shi-zi-fu-chuan&quot;&gt;原始字符串&lt;&#x2F;h2&gt;
&lt;p&gt;IL中没有原始字符串，如C#中的@&amp;quot;&amp;quot;在IL中则是已经经过编译器转义的字符串&amp;quot;\&amp;quot;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;lei-de-ji-cheng&quot;&gt;类的继承&lt;&#x2F;h2&gt;
&lt;p&gt;IL使用extends关键字表示类的继承&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class auto ansi Animal
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;    newobj instance void Dog::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    callvirt instance void Animal::run()
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method virtual instance void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;an Animal is running&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class auto ansi Dog extends Animal
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldarg.0
&lt;&#x2F;span&gt;&lt;span&gt;    call instance void Animal::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method virtual instance void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;an Dog is running&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;子类的构造函数必须调用父类的构造函数，否则会报InvalidProgramException异常。
实例方法如果没有呢new&#x2F;virtual关键字，则默认为new，virtaul则标明为虚方法，表明方法可以重写或覆盖了父类的方法（在C#中用override）。
callvirt：在运行时决定要调用的方法。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-xian-jie-kou&quot;&gt;实现接口&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class interface IRunnable
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual abstract void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;   {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class auto ansi Animal implements IRunnable
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;    newobj instance void Dog::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    callvirt instance void Animal::run()
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual newslot instance void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;an Animal is running&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class auto ansi Dog extends Animal
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldarg.0
&lt;&#x2F;span&gt;&lt;span&gt;    call instance void Animal::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual instance void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;an Dog is running&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;实现接口时如果方法签名不匹配或为实现接口中的方法，将报TypeLoadException异常。
newslot:当第一次把方法声明为virtual方法时，最好把它标记为newslot，它表明虚方法的根。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xi-gou-han-shu&quot;&gt;析构函数&lt;&#x2F;h2&gt;
&lt;p&gt;C#中的析构函数编译成IL后，转化成Finalize()方法。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class interface IRunnable
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual abstract void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;   {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class auto ansi Animal implements IRunnable
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;    newobj instance void Animal::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    callvirt instance void Animal::run()
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual newslot instance void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;an Animal is running&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method family hidebysig virtual instance void Finalize() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;in class Animal destructor&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;虽然Finalize的执行是由运行时决定的，但是在这个例子中还是可以看见执行的。
类不会继承构造函数和析构函数。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fang-wen-xiu-shi-fu-internal&quot;&gt;访问修饰符internal&lt;&#x2F;h2&gt;
&lt;p&gt;C#的访问修饰符internal只是C#词法的一部分，与IL没有任何关系。
C#中父类的可访问性不能比子类小，但是在IL中不遵循这个规则。
C#中方法的可访问性受它所在的类的可访问性的限制，但是在IL中没有这个限制。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qiang-zhi-lei-xing-zhuan-huan&quot;&gt;强制类型转换&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class interface IRunnable
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual abstract void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;   {}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class auto ansi Animal implements IRunnable
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;    .locals(class Animal V_0,class Dog V_1)
&lt;&#x2F;span&gt;&lt;span&gt;    newobj instance void Dog::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    stloc.0    &#x2F;&#x2F;转换成Animal
&lt;&#x2F;span&gt;&lt;span&gt;    ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;    callvirt instance void Animal::run()
&lt;&#x2F;span&gt;&lt;span&gt;    ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;    castclass Dog &#x2F;&#x2F;转换成Dog
&lt;&#x2F;span&gt;&lt;span&gt;    call instance void Dog::run()
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual newslot instance void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;an Animal is running&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method family hidebysig virtual instance void Finalize() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;in class Animal destructor&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class auto ansi Dog extends Animal
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;.method instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldarg.0
&lt;&#x2F;span&gt;&lt;span&gt;    call instance void Animal::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.method public virtual instance void run() il managed
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;an Dog is running&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果转换失败，将抛出InvalidCastException异常。&lt;&#x2F;p&gt;
&lt;p&gt;C#中不能继承标明Sealed的类，但在IL中可以。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi sealed zzz extends System.Object
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void vijay() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi yyy extends zzz
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;literal&quot;&gt;literal&lt;&#x2F;h2&gt;
&lt;p&gt;C#编译器会在编译时计算所有常量的值。literal字段代表常量，但是不可以在IL中访问，如果访问会在运行时报错MissingFieldException。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;initonly&quot;&gt;initonly&lt;&#x2F;h2&gt;
&lt;p&gt;C#中用readonly标记只读字段，在IL中使用initonly。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>IL学习(一)</title>
        <published>2010-05-01T00:00:00+00:00</published>
        <updated>2010-05-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/learning-il/learning-il-1/"/>
        <id>https://blog.dotone.top/blog/it/learning-il/learning-il-1/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/learning-il/learning-il-1/">&lt;h2 id=&quot;sheng-ming-ru-kou-dian&quot;&gt;声明入口点：&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.method void myfunc(){
&lt;&#x2F;span&gt;&lt;span&gt;    .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;程序集中只能有一个入口点，可以在方法内的任何位置&lt;&#x2F;p&gt;
&lt;h2 id=&quot;diao-yong-fang-fa&quot;&gt;调用方法：&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.method void myfunc(){
&lt;&#x2F;span&gt;&lt;span&gt;    .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;    ldstr &amp;quot;hello,world&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    call void [mscorlib]System.Console::WriteLine(class System.String)
&lt;&#x2F;span&gt;&lt;span&gt;    ret
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;ret:说明方法的结束&lt;&#x2F;p&gt;
&lt;p&gt;顺序：
call
返回类型
命名空间
方法
参数类型&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fang-fa-xiu-shi-shu-xing&quot;&gt;方法修饰属性&lt;&#x2F;h2&gt;
&lt;p&gt;public&#x2F;private 可访问性&lt;&#x2F;p&gt;
&lt;p&gt;hidebysig    在子类中通过方法名称或签名隐藏父类中的方法&lt;&#x2F;p&gt;
&lt;p&gt;static    有入口点的方法必须是静态的&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chuang-jian-lei&quot;&gt;创建类&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void fly() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;hello,world&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(class System.String)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;ldstr:加载字符串到栈&lt;&#x2F;p&gt;
&lt;p&gt;auto:由运行时决定内存而不是当前程序&lt;&#x2F;p&gt;
&lt;p&gt;声明构造函数&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0    &#x2F;&#x2F;this指针
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;hello,world&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(class System.String)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void fly() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        newobj instance void bird::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;        pop
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;ldarg：加载函数传入参数到栈，类的实例方法自动传入this指针，位于参数列表中位置0&lt;&#x2F;p&gt;
&lt;p&gt;newobj:在栈顶创建新对象&lt;&#x2F;p&gt;
&lt;p&gt;pop:弹出栈顶，这里新创建的对象没有用，所以要弹出&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sheng-ming-jing-tai-gou-zao-han-shu&quot;&gt;声明静态构造函数&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;.ctor&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method private static void .cctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;.cctor&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void fly() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        newobj instance void bird::.ctor()&#x2F;&#x2F;创建对象
&lt;&#x2F;span&gt;&lt;span&gt;        pop
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;sheng-ming-cheng-yuan-bian-liang&quot;&gt;声明成员变量&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field private int32 i
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0    &#x2F;&#x2F;this
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4    10&#x2F;&#x2F;加载int32常量10到栈
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 bird::i&#x2F;&#x2F;栈中的值赋给成员变量i
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void fly() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        newobj instance void bird::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 bird::i
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;ldc:加载常量到栈&lt;&#x2F;p&gt;
&lt;p&gt;ldfld:加载成员变量到栈顶&lt;&#x2F;p&gt;
&lt;p&gt;stfld:将栈顶的值赋给成员变量&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sheng-ming-jing-tai-cheng-yuan-bian-liang&quot;&gt;声明静态成员变量&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field private int32 i
&lt;&#x2F;span&gt;&lt;span&gt;    .field private static int32 j
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0    &#x2F;&#x2F;this指针
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4    20
&lt;&#x2F;span&gt;&lt;span&gt;        stsfld int32 bird::j &#x2F;&#x2F;初始化静态成员j
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4    10&#x2F;&#x2F;加载int32常量10到栈
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 bird::i&#x2F;&#x2F;栈中的值赋给成员变量i
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void fly() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        newobj instance void bird::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;输出成员变量
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 bird::i
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;输出静态成员变量
&lt;&#x2F;span&gt;&lt;span&gt;        ldsfld int32 bird::j
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;sheng-ming-ju-bu-bian-liang&quot;&gt;声明局部变量&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field private int32 i
&lt;&#x2F;span&gt;&lt;span&gt;    .field private static int32 j
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0    &#x2F;&#x2F;this指针
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4    20
&lt;&#x2F;span&gt;&lt;span&gt;        stsfld int32 bird::j &#x2F;&#x2F;初始化静态成员j
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4    10&#x2F;&#x2F;加载int32常量10到栈
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 bird::i&#x2F;&#x2F;栈中的值赋给成员变量i
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void fly() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0,class bird V_1)&#x2F;&#x2F;声明局部变量
&lt;&#x2F;span&gt;&lt;span&gt;        newobj instance void bird::.ctor()&#x2F;&#x2F;创建对象
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.1    &#x2F;&#x2F;对象赋给变量V_1
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0    &#x2F;&#x2F;将5赋给变量V_0
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;重新加载对象,这样才能操作它的成员和方法
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;输出成员变量
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 bird::i
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;重新加载对象,这样才能操作它的成员和方法
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0    &#x2F;&#x2F;值
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 bird::i&#x2F;&#x2F;赋值
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;重新加载对象,这样才能操作它的成员和方法
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;输出成员变量
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 bird::i
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F;输出静态成员变量
&lt;&#x2F;span&gt;&lt;span&gt;        ldsfld int32 bird::j
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;局部变量自动命名为V_x的形式&lt;&#x2F;p&gt;
&lt;p&gt;stloc:把栈顶的值赋给局部变量&lt;&#x2F;p&gt;
&lt;p&gt;ldloc:把局部变量加载到栈顶&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sheng-ming-cheng-yuan-fang-fa&quot;&gt;声明成员方法&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my {}
&lt;&#x2F;span&gt;&lt;span&gt;.class private auto ansi bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .field private int32 i
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void .ctor() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.0    &#x2F;&#x2F;this
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4    10&#x2F;&#x2F;加载int32常量10到栈
&lt;&#x2F;span&gt;&lt;span&gt;        stfld int32 bird::i&#x2F;&#x2F;栈中的值赋给成员变量i
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public instance void fly(string over) il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;fly over {0}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldarg.1
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;    .method public hidebysig static void main() il managed
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(class bird V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        newobj instance void bird::.ctor()
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldfld int32 bird::i
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;lake&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call instance void bird::fly(string)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>IL学习(二)</title>
        <published>2010-05-01T00:00:00+00:00</published>
        <updated>2010-05-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/learning-il/learning-il-2/"/>
        <id>https://blog.dotone.top/blog/it/learning-il/learning-il-2/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/learning-il/learning-il-2/">&lt;h2 id=&quot;biao-qian&quot;&gt;标签&lt;&#x2F;h2&gt;
&lt;p&gt;标签能用在代码中任意跳转&lt;&#x2F;p&gt;
&lt;p&gt;虽然C#和IL中都定义了bool类型，但是他们的值却是0和1，可见这是和c、c++是一脉相承的。&lt;&#x2F;p&gt;
&lt;p&gt;br:无条件跳转&lt;&#x2F;p&gt;
&lt;p&gt;brtrue:当值为1时跳转&lt;&#x2F;p&gt;
&lt;p&gt;brfalse:当值为0时跳转&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ifyu-ju&quot;&gt;if语句&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(bool V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 1    &#x2F;&#x2F;常量1
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0    &#x2F;&#x2F;bool变量赋值1
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0    &#x2F;&#x2F;使用bool变量
&lt;&#x2F;span&gt;&lt;span&gt;        brfalse IL_001    &#x2F;&#x2F;如果为假跳转到结束
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;in if statement&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;        IL_001: ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;if-elseyu-ju&quot;&gt;if else语句&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(bool V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 0    &#x2F;&#x2F;常量1
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0    &#x2F;&#x2F;bool变量赋值1
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0    &#x2F;&#x2F;使用bool变量
&lt;&#x2F;span&gt;&lt;span&gt;        brfalse IL_001    &#x2F;&#x2F;如果为假跳转到结束
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;in if true statement&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;        br IL_002    &#x2F;&#x2F;true语句完成
&lt;&#x2F;span&gt;&lt;span&gt;        IL_001:    ldstr &amp;quot;in if false statement&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string)
&lt;&#x2F;span&gt;&lt;span&gt;        IL_002: ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;suan-shu-yun-suan-fu&quot;&gt;算术运算符&lt;&#x2F;h2&gt;
&lt;p&gt;add&#x2F;sub&#x2F;mul&#x2F;div&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0,int32 V_1)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 12
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        add    &#x2F;&#x2F;加
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        sub    &#x2F;&#x2F;减
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        mul    &#x2F;&#x2F;乘
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        div    &#x2F;&#x2F;除
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;cao-zuo-fu&quot;&gt;++操作符&lt;&#x2F;h2&gt;
&lt;p&gt;++操作符是+1操作&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 1
&lt;&#x2F;span&gt;&lt;span&gt;        add    &#x2F;&#x2F;V_0++
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;guan-xi-yun-suan-fu&quot;&gt;关系运算符&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;cgt:大于&lt;&#x2F;li&gt;
&lt;li&gt;clt:小于&lt;&#x2F;li&gt;
&lt;li&gt;ceq:等于&lt;&#x2F;li&gt;
&lt;li&gt;不等于是将ceq的结果与false再次进行ceq操作&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0,int32 V_1,bool V_2)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 10
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        cgt
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.2
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;5 &amp;gt; 10 :{0}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_2
&lt;&#x2F;span&gt;&lt;span&gt;        box [mscorlib]System.Int32
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        clt
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.2
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;5 &amp;lt; 10 :{0}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_2
&lt;&#x2F;span&gt;&lt;span&gt;        box [mscorlib]System.Int32
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        ceq
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.2
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;5 == 10 : {0}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_2
&lt;&#x2F;span&gt;&lt;span&gt;        box [mscorlib]System.Int32
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.1
&lt;&#x2F;span&gt;&lt;span&gt;        ceq
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 0
&lt;&#x2F;span&gt;&lt;span&gt;        ceq
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.2
&lt;&#x2F;span&gt;&lt;span&gt;        ldstr &amp;quot;5 != 10 :{0}&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        ldloca V_2
&lt;&#x2F;span&gt;&lt;span&gt;        box [mscorlib]System.Int32
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(string,object)
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;whilexun-huan&quot;&gt;while循环&lt;&#x2F;h2&gt;
&lt;p&gt;循环的条件在后面&lt;&#x2F;p&gt;
&lt;p&gt;ble:当小于等于时跳转&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 0
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        br IL_002
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 1
&lt;&#x2F;span&gt;&lt;span&gt;        add
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0 &#x2F;&#x2F;V_0++
&lt;&#x2F;span&gt;&lt;span&gt;        IL_002: ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        ble IL_001 &#x2F;&#x2F;V_0 &amp;lt;= 5
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;do-whilexun-huan&quot;&gt;do...while循环&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 0
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        IL_001: ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 1
&lt;&#x2F;span&gt;&lt;span&gt;        add
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0 &#x2F;&#x2F;V_0++
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        ble IL_001 &#x2F;&#x2F;V_0 &amp;lt;= 5
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;forxun-huan&quot;&gt;for循环&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 0
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        br IL_002
&lt;&#x2F;span&gt;&lt;span&gt;        IL_001: ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 1
&lt;&#x2F;span&gt;&lt;span&gt;        add
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0 &#x2F;&#x2F;V_0++
&lt;&#x2F;span&gt;&lt;span&gt;        IL_002: ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        ble IL_001 &#x2F;&#x2F;V_0 &amp;lt;= 5
&lt;&#x2F;span&gt;&lt;span&gt;        ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;break-continue&quot;&gt;break&#x2F;continue&lt;&#x2F;h2&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;.assembly my{}
&lt;&#x2F;span&gt;&lt;span&gt;.class bird
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    .method static void main()
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        .entrypoint
&lt;&#x2F;span&gt;&lt;span&gt;        .locals(int32 V_0)
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 0
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        br IL_002   
&lt;&#x2F;span&gt;&lt;span&gt;        IL_001: ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 1
&lt;&#x2F;span&gt;&lt;span&gt;        add
&lt;&#x2F;span&gt;&lt;span&gt;        stloc.0 &#x2F;&#x2F;V_0++
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 2
&lt;&#x2F;span&gt;&lt;span&gt;        div
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 1
&lt;&#x2F;span&gt;&lt;span&gt;        ceq
&lt;&#x2F;span&gt;&lt;span&gt;        brtrue IL_002 &#x2F;&#x2F;continue
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 3
&lt;&#x2F;span&gt;&lt;span&gt;        ceq
&lt;&#x2F;span&gt;&lt;span&gt;        brtrue IL_003    &#x2F;&#x2F;break
&lt;&#x2F;span&gt;&lt;span&gt;        ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        call void [mscorlib]System.Console::WriteLine(int32)
&lt;&#x2F;span&gt;&lt;span&gt;        IL_002: ldloc.0
&lt;&#x2F;span&gt;&lt;span&gt;        ldc.i4 5
&lt;&#x2F;span&gt;&lt;span&gt;        ble IL_001 &#x2F;&#x2F;V_0 &amp;lt;= 5
&lt;&#x2F;span&gt;&lt;span&gt;        IL_003: ret
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>编写NLog飞信扩展</title>
        <published>2010-03-24T00:00:00+00:00</published>
        <updated>2010-03-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/nlog-target-fetion/"/>
        <id>https://blog.dotone.top/blog/it/nlog-target-fetion/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/nlog-target-fetion/">&lt;p&gt;&lt;code&gt;NLog&lt;&#x2F;code&gt;是个功能很丰富的日志记录工具，我们可以很方便的扩展日志目标。当系统发生严重错误时，我们希望通过短信得到通知，用飞信&lt;code&gt;API(fetionlib)&lt;&#x2F;code&gt;写一个飞信扩展，就得到了免费的短信提醒。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bian-xie-nlogkuo-zhan&quot;&gt;编写NLog扩展:&lt;&#x2F;h2&gt;
&lt;p&gt;很简单，只需从&lt;code&gt;TargetWithLayout&lt;&#x2F;code&gt;继承，重写&lt;code&gt;Write&lt;&#x2F;code&gt;方法就行了。&lt;&#x2F;p&gt;
&lt;p&gt;FetionTarget.cs&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Collections.Generic;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Linq;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Net;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Net.Cache;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Text;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;Newtonsoft.Json;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.IO;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Text.RegularExpressions;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Threading;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Web;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;NLog;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;namespace &lt;&#x2F;span&gt;&lt;span&gt;FetionLib
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Target&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Fetion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;)]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FetionTarget &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;TargetWithLayout
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;FetionTarget&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 基本地址
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BaseAddress &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 登录手机号
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Mobile &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 用户密码
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Password &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 收信人
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Recipients &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 超时时限
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Timeout &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 缓存消息数量
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BufferCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;set&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;; }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;protected override void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Write&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(LogEventInfo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;message &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CompiledLayout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GetFormattedMessage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logEvent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;protected override void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Write&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(LogEventInfo[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logEvents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;foreach &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;eventInfo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logEvents&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Write&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;eventInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 发送消息
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;message&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;returns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;returns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IsNullOrEmpty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BaseAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;BaseAddress为空&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IsNullOrEmpty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Mobile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Mobile为空&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Regex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IsMatch&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Mobile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span&gt;@&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;\d+&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Mobile格式不正确&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                List&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friends &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;List&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;&amp;gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friends&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Mobile&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;发送到自己
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IsNullOrEmpty&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Recipients&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parts &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Recipients&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Split&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;char&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;[] { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;&amp;#39;;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StringSplitOptions&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RemoveEmptyEntries&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Length &lt;&#x2F;span&gt;&lt;span&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fetionId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parts
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                                     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;select &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;fetionId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Trim&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ToArray&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friends&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AddRange&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;items&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friends&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Distinct&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ToArray&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; 群发
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;message&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;friends&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;            &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;returns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;returns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friends&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeOut &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TryParse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Timeout&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;out &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeOut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeOut &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeOut &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uuid &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Guid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NewGuid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ToString&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                JsonSerializer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;serializer &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;JsonSerializer();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                StringWriter &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;swriter &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;StringWriter();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;serializer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Serialize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;swriter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friends&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friendUri &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;swriter&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ToString&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;mobile=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Mobile &lt;&#x2F;span&gt;&lt;span&gt;+ &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;amp;uuid=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;uuid
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                                 &lt;&#x2F;span&gt;&lt;span&gt;+ &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;amp;password=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Password &lt;&#x2F;span&gt;&lt;span&gt;+ &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;amp;friend=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;friendUri
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                                 &lt;&#x2F;span&gt;&lt;span&gt;+ &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;amp;message=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HttpUtility&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UrlEncode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UTF8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HttpWebRequest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Create&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{0}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&#x2F;restlet&#x2F;fetion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BaseAddress&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Method &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;POST&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CachePolicy &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;RequestCachePolicy(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RequestCacheLevel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NoCacheNoStore&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ContentType &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;application&#x2F;x-www-form-urlencoded&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Timeout &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;timeOut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;buffer &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ASCII&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GetBytes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bufferSize &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1024&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;offset &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Length &lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bufferSize &lt;&#x2F;span&gt;&lt;span&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1024 &lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Length&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                AsyncCallback &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;responseCallback &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;delegate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IAsyncResult ar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;var response &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(HttpWebResponse)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;EndGetResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;response&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;StatusCode &lt;&#x2F;span&gt;&lt;span&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HttpStatusCode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Accepted&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;success
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;发送成功&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;fail
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;发送失败&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                };
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                AsyncCallback &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;writeCallBack &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;writeCallBack &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;delegate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IAsyncResult ar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestStream &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(Stream)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AsyncState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestStream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;EndWrite&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;offset &lt;&#x2F;span&gt;&lt;span&gt;+= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;left &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Length &lt;&#x2F;span&gt;&lt;span&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;offset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;left &lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;left &lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bufferSize &lt;&#x2F;span&gt;&lt;span&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bufferSize &lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestStream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BeginWrite&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;offset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                                                     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;writeCallBack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                                                     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestStream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BeginGetResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;responseCallback&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(Exception &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;fail
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fail:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{0}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ex&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                };
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                AsyncCallback &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestCallBack &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;delegate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IAsyncResult ar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;var requestStream &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;EndGetRequestStream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ar&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestStream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BeginWrite&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;buffer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;offset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;count&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;writeCallBack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                                             &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestStream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                };
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;BeginGetRequestStream&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;requestCallBack&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;编译项目得到FetionLib.dll。&lt;&#x2F;p&gt;
&lt;p&gt;通过配置文件使用：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;xml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-xml &quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;xml &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;?&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;configuration&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;configSections&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;section &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;nlog&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;NLog.Config.ConfigSectionHandler, NLog&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;configSections&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nlog &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;xmlns&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;www.nlog-project.org&#x2F;schemas&#x2F;NLog.xsd&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;xmlns:xsi&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;extensions&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;add &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;assembly&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;FetionLib&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;extensions&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;targets&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;lt;!--默认收信人为发信人，recipients收信人用;分隔多个--&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fetion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Fetion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;BaseAddress&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;fetion.xinghuo.org.ru&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;mobile&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;135*******&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;password&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;******&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;layout&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${date:format=HH\:MM\:ss} ${message}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;xsi:type&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;layout&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;${date:format=HH\:MM\:ss} ${logger} ${message}&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;targets&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rules&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;minLevel&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;appendTo&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;fetion&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;minLevel&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;appendTo&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rules&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nlog&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;startup&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;supportedRuntime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;v4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;sku&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.NETFramework,Version=v4.0&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&#x2F;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;startup&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;configuration&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;在控制台测试：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;NLog;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;namespace &lt;&#x2F;span&gt;&lt;span&gt;NLogTest
&lt;&#x2F;span&gt;&lt;span&gt;    {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Program
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                Logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logger &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;LogManager&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GetCurrentClassLogger&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;logger&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;something is wrong!&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ReadKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;启动运行后看到&amp;quot;发送成功&amp;quot;你就收到短信了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xiang-guan-zi-yuan&quot;&gt;相关资源：&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;nlog-project.org&#x2F;how-to-write-your-own-target.html&quot;&gt;1.How To Write Your Own Target&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;fetionlib.appspot.com&#x2F;api.html&quot;&gt;2.飞信接口API调用举例&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记六</title>
        <published>2010-03-09T00:00:00+00:00</published>
        <updated>2010-03-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-6/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-6/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-6/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;Computation Expression:&lt;&#x2F;p&gt;
&lt;p&gt;作用：改变代码执行逻辑；减少重复代码；扩展F#语言&lt;&#x2F;p&gt;
&lt;p&gt;限制：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;1.不能在Computation Expression中定义新类型&lt;&#x2F;li&gt;
&lt;li&gt;2.不能在Computation Expression中使用mutable变量，用ref变量代替&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;下面定义一个允许使用let!和return关键字的computation expression&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;DefinedBuilder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Bind&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;),(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;rest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)) = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;允许使用let!
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;x:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; x
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;when&lt;&#x2F;span&gt;&lt;span&gt; x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt;rest x
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _ -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; x
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;允许使用return
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;defined &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; DefinedBuilder&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;expr a b c &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    defined&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;只有当x&amp;gt;0时才会执行以下剩余语句，否则返回x
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;只有当y&amp;gt;0时才会执行以下剩余语句，否则返回y
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;z &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; c % &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;只有当z&amp;gt;0时才会执行以下剩余语句，否则返回z
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; z
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;expr -2 3 5 = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 3 5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;返回x
&lt;&#x2F;span&gt;&lt;span&gt;printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;expr 1 3 5 = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 3 5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;返回y
&lt;&#x2F;span&gt;&lt;span&gt;printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;expr 1 6 3 = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 6 3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;返回z
&lt;&#x2F;span&gt;&lt;span&gt;printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;expr 1 6 5 = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;expr &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 6 5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;返回x+y+z
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Computation Expresssion所有方法：
方法 描述&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;member For:
&lt;&#x2F;span&gt;&lt;span&gt;seq&amp;lt;&amp;#39;a&amp;gt; * (&amp;#39;a -&amp;gt; Result&amp;lt;unit&amp;gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;unit&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用for循环，参数是循环的所有数据项和循环的主体代码
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Zero:
&lt;&#x2F;span&gt;&lt;span&gt;unit -&amp;gt; Result&amp;lt;unit&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许执行unit表达式
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Combine:
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;unit&amp;gt; * Result&amp;lt;&amp;#39;a&amp;gt; -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;把computation expression各部分连接起来
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member While:
&lt;&#x2F;span&gt;&lt;span&gt;(unit -&amp;gt; bool) * Result&amp;lt;unit&amp;gt; -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;unit&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用while循环
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Return:
&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a -&amp;gt; Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用return关键字
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member ReturnFrom:
&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a -&amp;gt; Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用return!关键字
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Yield:
&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a -&amp;gt; Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用yield关键字
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member YieldFrom:
&lt;&#x2F;span&gt;&lt;span&gt;seq&amp;lt;&amp;#39;a&amp;gt; -&amp;gt; Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用yield!关键字
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Delay:
&lt;&#x2F;span&gt;&lt;span&gt;(unit -&amp;gt; Result&amp;lt;&amp;#39;a&amp;gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;这个操作通常和Combine一起使用，以确保操作以正确的顺序执行
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Run:
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt; -&amp;gt; Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;在Computation Expression的开始执行时被调用
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Using:
&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;a * (&amp;#39;a -&amp;gt; Result&amp;lt;&amp;#39;b&amp;gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;b&amp;gt; when &amp;#39;a :&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;System.IDisposable
&lt;&#x2F;span&gt;&lt;span&gt;允许使用use!关键字，负责IDisposable.Dispose()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member Bind:
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt; * (&amp;#39;a -&amp;gt; Result&amp;lt;&amp;#39;b&amp;gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;b&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用let!关键字(do!是let!的特殊形式，Bind返回
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;unit&amp;gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member TryFinally:
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt; * (unit -&amp;gt; unit) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用try finally表达式，参数:try代码块的结果和finally代码块代表的函数
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;member TryWith:
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt; * (exn -&amp;gt; Result&amp;lt;&amp;#39;a&amp;gt;) -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;Result&amp;lt;&amp;#39;a&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;允许使用try with表达式，参数:try代码块的结果和with代码块代表的函数 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记七</title>
        <published>2010-03-09T00:00:00+00:00</published>
        <updated>2010-03-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-7/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-7/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-7/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;异步&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;async 表达式
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Async&amp;lt;’T&amp;gt;类型：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Async.Start 异步执行
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Async.Parallel seq&amp;lt;Async&amp;lt;’T&amp;gt;&amp;gt; 并行执行
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Async.RunSynchronously同步执行，并获取返回值，通常在Async.Parallel之后调用
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;异步中的异常处理：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;未捕捉的异常将中断进程
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;1.可以在async表达式中使用try with表达式
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;2.使用Async.Catch延迟处理异常
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;例如：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;open System.IO
&lt;&#x2F;span&gt;&lt;span&gt;let filePath = &amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;let processBytes data:byte[] =
&lt;&#x2F;span&gt;&lt;span&gt;    data
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;async {
&lt;&#x2F;span&gt;&lt;span&gt;    printfn &amp;quot;Processing file [%s]&amp;quot; (Path.GetFileName(filePath))
&lt;&#x2F;span&gt;&lt;span&gt;    use fileStream = new FileStream(filePath, FileMode.Open)
&lt;&#x2F;span&gt;&lt;span&gt;    let bytesToRead = int fileStream.Length
&lt;&#x2F;span&gt;&lt;span&gt;    let! data = fileStream.AsyncRead(bytesToRead)
&lt;&#x2F;span&gt;&lt;span&gt;    printfn
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;Opened [%s], read [%d] bytes&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        (Path.GetFileName(filePath))
&lt;&#x2F;span&gt;&lt;span&gt;        data.Length
&lt;&#x2F;span&gt;&lt;span&gt;    let data&amp;#39; = processBytes data
&lt;&#x2F;span&gt;&lt;span&gt;    use resultFile = new FileStream(filePath + &amp;quot;.results&amp;quot;, FileMode.Create)
&lt;&#x2F;span&gt;&lt;span&gt;    do! resultFile.AsyncWrite(data&amp;#39;, 0, data&amp;#39;.Length)
&lt;&#x2F;span&gt;&lt;span&gt;    printfn &amp;quot;Finished processing file [%s]&amp;quot; &amp;lt;| Path.GetFileName(filePath)
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;|&amp;gt; Async.Catch
&lt;&#x2F;span&gt;&lt;span&gt;|&amp;gt; Async.RunSynchronously
&lt;&#x2F;span&gt;&lt;span&gt;|&amp;gt; function
&lt;&#x2F;span&gt;&lt;span&gt;| Choice1Of2 result -&amp;gt; printfn &amp;quot;%A&amp;quot; result
&lt;&#x2F;span&gt;&lt;span&gt;| Choice2Of2 (ex:exn) -&amp;gt; printfn &amp;quot;%s&amp;quot; ex.Message
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;3.Async.StartWithContinuations
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Async.StartWithContinuations(
&lt;&#x2F;span&gt;&lt;span&gt;    superAwesomeAsyncTask,
&lt;&#x2F;span&gt;&lt;span&gt;    (fun result -&amp;gt; printfn &amp;quot;Task completed with result %A&amp;quot; result),
&lt;&#x2F;span&gt;&lt;span&gt;    (fun exn    -&amp;gt; printfn &amp;quot;Task threw an exception with Message: %s&amp;quot; exn.Message),
&lt;&#x2F;span&gt;&lt;span&gt;    (fun oce    -&amp;gt; printfn &amp;quot;Task was cancelled. Message: %s&amp;quot; oce.Message)
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;异步中的取消：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;不同于Thread.Abort()，调用取消不会立即终止线程，它会在下一次调用let!、do!等操作时停止执行剩余代码，执行取消处理代码。CancelDefaultToken用来跟踪是否执行取消处理,Async.CancelDefaultToken()取消最后一个启动的任务
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;例：取消最后一个启动的任务
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;open System
&lt;&#x2F;span&gt;&lt;span&gt;open System.Threading
&lt;&#x2F;span&gt;&lt;span&gt;let cancelableTask =
&lt;&#x2F;span&gt;&lt;span&gt;    async {
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;Waiting 10 seconds...&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        for i = 1 to 10 do
&lt;&#x2F;span&gt;&lt;span&gt;            printfn &amp;quot;%d...&amp;quot; i
&lt;&#x2F;span&gt;&lt;span&gt;            do! Async.Sleep(1000)
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;Finished!&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Callback used when the operation is canceled
&lt;&#x2F;span&gt;&lt;span&gt;let cancelHandler (ex : OperationCanceledException) =
&lt;&#x2F;span&gt;&lt;span&gt;    printfn &amp;quot;The task has been canceled.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;Async.TryCancelled(cancelableTask, cancelHandler)
&lt;&#x2F;span&gt;&lt;span&gt;|&amp;gt; Async.Start
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; ...
&lt;&#x2F;span&gt;&lt;span&gt;Async.CancelDefaultToken()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;如何取消所有异步任务：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;open System.Threading
&lt;&#x2F;span&gt;&lt;span&gt;let computation = Async.TryCancelled(cancelableTask, cancelHandler)
&lt;&#x2F;span&gt;&lt;span&gt;let cancellationSource = new CancellationTokenSource()
&lt;&#x2F;span&gt;&lt;span&gt;Async.Start(computation, cancellationSource.Token)
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; ...
&lt;&#x2F;span&gt;&lt;span&gt;cancellationSource.Cancel()
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Async.Sleep:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Async.Sleep不同于Thread.Sleep，它不阻塞工作线程，sleep的线程被其他工作线程重用，当sleep结束，将唤醒另一个线程来完成剩余工作
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;自定义异步扩展方法:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;使用Async.FromBeginEnd方法来自定义异步扩展方法
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;open System
&lt;&#x2F;span&gt;&lt;span&gt;open System.IO
&lt;&#x2F;span&gt;&lt;span&gt;type System.IO.Directory with
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;&#x2F; Retrieve all files under a path asynchronously
&lt;&#x2F;span&gt;&lt;span&gt;    static member AsyncGetFiles(path : string, searchPattern : string) =
&lt;&#x2F;span&gt;&lt;span&gt;        let dele = new Func&amp;lt;string * string, string[]&amp;gt;(Directory.GetFiles)
&lt;&#x2F;span&gt;&lt;span&gt;        Async.FromBeginEnd(
&lt;&#x2F;span&gt;&lt;span&gt;            (path, searchPattern),
&lt;&#x2F;span&gt;&lt;span&gt;            dele.BeginInvoke,
&lt;&#x2F;span&gt;&lt;span&gt;            dele.EndInvoke)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记八</title>
        <published>2010-03-09T00:00:00+00:00</published>
        <updated>2010-03-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-8/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-8/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-8/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;并行框架&lt;&#x2F;p&gt;
&lt;p&gt;Parallel.For&lt;&#x2F;p&gt;
&lt;p&gt;Array.Parallel&lt;&#x2F;p&gt;
&lt;p&gt;Array.Parallel.iter&lt;&#x2F;p&gt;
&lt;p&gt;Array.parallel.map&lt;&#x2F;p&gt;
&lt;p&gt;Array.Parallel.choose&lt;&#x2F;p&gt;
&lt;p&gt;.Net并行扩展 (PFX)&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;PFX按照CPU剩余资源和CPU处理器个数决定同时处理多少个任务
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let task = Task.Factory.StartNew&amp;lt;string&amp;gt;(taskBody) &#x2F;&#x2F;创建一个并行任务
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let x = task.Result
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;访问Result将进行以下处理：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;1.如果任务已结束，则返回结果
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;2.如果任务已开始，等待任务完成
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;3.如果任务未执行，则在当前线程执行
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Task.WaitAll 等待所有任务完成&lt;&#x2F;p&gt;
&lt;p&gt;Task.WaitAny 等待任一任务完成
取消任务:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;需要自行判断何时取消任务
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;open System
&lt;&#x2F;span&gt;&lt;span&gt;open System.Threading
&lt;&#x2F;span&gt;&lt;span&gt;open System.Threading.Tasks
&lt;&#x2F;span&gt;&lt;span&gt;let longTaskCTS = new CancellationTokenSource()
&lt;&#x2F;span&gt;&lt;span&gt;let longRunningTask() =
&lt;&#x2F;span&gt;&lt;span&gt;    let mutable i = 1
&lt;&#x2F;span&gt;&lt;span&gt;    let mutable loop = true
&lt;&#x2F;span&gt;&lt;span&gt;    while i &amp;lt;= 10 &amp;amp;&amp;amp; loop do
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;%d...&amp;quot; i
&lt;&#x2F;span&gt;&lt;span&gt;        i &amp;lt;- i + 1
&lt;&#x2F;span&gt;&lt;span&gt;        Thread.Sleep(1000)
&lt;&#x2F;span&gt;&lt;span&gt;        &#x2F;&#x2F; Check if the task was cancelled
&lt;&#x2F;span&gt;&lt;span&gt;        if longTaskCTS.IsCancellationRequested then
&lt;&#x2F;span&gt;&lt;span&gt;            printfn &amp;quot;Cancelled; stopping early.&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;            loop &amp;lt;- false
&lt;&#x2F;span&gt;&lt;span&gt;    printfn &amp;quot;Complete!&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;let startLongRunningTask() =
&lt;&#x2F;span&gt;&lt;span&gt;    Task.Factory.StartNew(longRunningTask, longTaskCTS.Token)
&lt;&#x2F;span&gt;&lt;span&gt;let t = startLongRunningTask()
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; ...   
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;longTaskCTS.Cancel()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;异常：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;任务抛出System.AggregateException类型包装的异常
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;try
&lt;&#x2F;span&gt;&lt;span&gt;    let treasureFindingTask =
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        Task.Factory.StartNew&amp;lt;int&amp;gt;(fun () -&amp;gt; findAllTreasure colossalCave)
&lt;&#x2F;span&gt;&lt;span&gt;    printfn &amp;quot;Found %d treasure!&amp;quot; treasureFindingTask.Result
&lt;&#x2F;span&gt;&lt;span&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;| :? AggregateException as ae -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; Get all inner exceptions from the aggregate exception.
&lt;&#x2F;span&gt;&lt;span&gt;    let rec decomposeAggregEx (ae : AggregateException) =
&lt;&#x2F;span&gt;&lt;span&gt;        seq {
&lt;&#x2F;span&gt;&lt;span&gt;            for innerEx in ae.InnerExceptions do
&lt;&#x2F;span&gt;&lt;span&gt;                match innerEx with
&lt;&#x2F;span&gt;&lt;span&gt;                | :? AggregateException as ae -&amp;gt; yield! decomposeAggregEx ae
&lt;&#x2F;span&gt;&lt;span&gt;                | _ -&amp;gt; yield innerEx
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    printfn &amp;quot;AggregateException:&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; Alternately, you can use ae.Flatten() to put all nested
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F; exceptions into a single AggregateException collection.
&lt;&#x2F;span&gt;&lt;span&gt;    decomposeAggregEx ae
&lt;&#x2F;span&gt;&lt;span&gt;    |&amp;gt; Seq.iter (fun ex -&amp;gt; printfn &amp;quot;\tMessage: %s&amp;quot; ex.Message)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记四</title>
        <published>2010-01-27T00:00:00+00:00</published>
        <updated>2010-01-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-4/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-4/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-4/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;对象相等：
元组、可区分的联合、Record都是引用类型，但是在相等比较时进行的是内容比较&lt;&#x2F;p&gt;
&lt;p&gt;类与继承:
F#中编译器不会提供默认构造函数&lt;&#x2F;p&gt;
&lt;p&gt;显示构造函数:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Person &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;val mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;声明字段，尚未初始化;不能在声明时初始化
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;val mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;InstanceCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;定义一个静态成员并初始化
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= {&lt;&#x2F;span&gt;&lt;span&gt;name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;myName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt; age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;初始化
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new(&lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;初始化时可以做额外的操作&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;初始化
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;                printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;初始化完成可以做额外的操作&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.name      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;有get和set方法的属性，必须通过this引用字段，get方法必须有括号
&lt;&#x2F;span&gt;&lt;span&gt;                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;必须把and和with对齐
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.age
&lt;&#x2F;span&gt;&lt;span&gt;                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; value
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Text &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; sprintf &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;name:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;;age:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; this.name this.age   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;只有get方法的属性
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.TalkWith&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =                   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;类方法
&lt;&#x2F;span&gt;&lt;span&gt;            printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;I’m talking with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; sb.Name
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;隐式构造函数：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;不能显式的定义字段，let定义的变量会在编译后转化为类字段
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; a
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;do
&lt;&#x2F;span&gt;&lt;span&gt;        printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;初始化后进行的操作&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;InstanceCount &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new (&lt;&#x2F;span&gt;&lt;span&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; text.Split&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;,&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;nm &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; int parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span&gt; Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;nm&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; ag&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;不是类成员，不能通过this引用
&lt;&#x2F;span&gt;&lt;span&gt;                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; value
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;类方法：&lt;&#x2F;p&gt;
&lt;p&gt;类方法递归时不需要rec关键字&lt;&#x2F;p&gt;
&lt;p&gt;泛型：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;’a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;泛型参数以英文单引号开头&lt;&#x2F;p&gt;
&lt;p&gt;在构造函数中初始化属性：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Bob&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;Age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;30&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;可访问性：public | private | internal&lt;&#x2F;p&gt;
&lt;p&gt;默认可访问性是public &#x2F;&#x2F;书上说字段默认为private，经验证字段默认也是public&lt;&#x2F;p&gt;
&lt;p&gt;模块中的成员也可以使用可访问性&lt;&#x2F;p&gt;
&lt;p&gt;可以使用fsi签名文件来控制可访问性，类似于C++中的头文件；不在签名文件中的代码默认为private，签名中的默认为public&lt;&#x2F;p&gt;
&lt;p&gt;继承：
从有显示构造函数的类继承：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Student&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;inherit&lt;&#x2F;span&gt;&lt;span&gt; Person
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;let mutable _sno = sno
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;val mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_sno&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new(&lt;&#x2F;span&gt;&lt;span&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;inherit&lt;&#x2F;span&gt;&lt;span&gt; Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;sno &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.SNO &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;sno
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span&gt;sno &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; value
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;从有隐式构造函数的类继承;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Student&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sno&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;inherit&lt;&#x2F;span&gt;&lt;span&gt; Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;必须调用基类构造函数
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_sno &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; sno
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.SNO &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= _&lt;&#x2F;span&gt;&lt;span&gt;sno
&lt;&#x2F;span&gt;&lt;span&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= _&lt;&#x2F;span&gt;&lt;span&gt;sno &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; value
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;重写：
要重写的方法和属性使用abstract标记，可以使用default为属性提供默认实现&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Sandwich&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Ingredients &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;string list
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Ingredients &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= []
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Calories &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;int
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Calories &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;[&amp;lt;AbstractClass&amp;gt;]&lt;&#x2F;code&gt;属性标记抽象类&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;[&amp;lt;Sealed&amp;gt;]&lt;&#x2F;code&gt;属性标记Sealed类&lt;&#x2F;p&gt;
&lt;p&gt;类型转换：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; Person&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;静态转换
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:?&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Person &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;动态转换
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;用于模式匹配&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;whatIs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| :&lt;&#x2F;span&gt;&lt;span&gt;? string    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as&lt;&#x2F;span&gt;&lt;span&gt; s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;x is a string \&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;\&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; s
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| :&lt;&#x2F;span&gt;&lt;span&gt;? int       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;as&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;x is an int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; i
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| :&lt;&#x2F;span&gt;&lt;span&gt;? list&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt; as&lt;&#x2F;span&gt;&lt;span&gt; l &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;x is an int list &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%A&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; l
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _ -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;x is a &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;|&lt;&#x2F;span&gt;&lt;span&gt; x.GetType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()&lt;&#x2F;span&gt;&lt;span&gt;.Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记五</title>
        <published>2010-01-27T00:00:00+00:00</published>
        <updated>2010-01-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-5/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-5/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-5/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;jie-kou&quot;&gt;接口&lt;&#x2F;h3&gt;
&lt;p&gt;定义接口：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;IPerson &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;所有方法和属性都是抽象的
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; TalkWith&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;IPerson –&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;unit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;IPerson &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;另一种形式
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;interface
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; TalkWith&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;IPerson –&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;unit
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;实现接口：&lt;&#x2F;p&gt;
&lt;p&gt;F#中实现接口必须实现接口中的所有属性和方法；实现接口时必须实现接口的所有基接口中的所有属性和方法。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;IPerson &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;所有方法和属性都是抽象的
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;set &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;可读写属性
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; Age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;只读属性
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; TalkWith&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;IPerson &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;unit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;方法
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;IStudent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;inherit&lt;&#x2F;span&gt;&lt;span&gt; IPerson
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;abstract&lt;&#x2F;span&gt;&lt;span&gt; ClassRoom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Student &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;val mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;val mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;val mutable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;room&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= {&lt;&#x2F;span&gt;&lt;span&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;age&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span&gt;room&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;room1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;interface&lt;&#x2F;span&gt;&lt;span&gt; IPerson &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;override &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.name
&lt;&#x2F;span&gt;&lt;span&gt;                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;and&lt;&#x2F;span&gt;&lt;span&gt; set value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;-&lt;&#x2F;span&gt;&lt;span&gt; value
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;override &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.age
&lt;&#x2F;span&gt;&lt;span&gt;                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;and set value = this.age &amp;lt;- value
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;override &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.TalkWith&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;IPerson&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;            printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;talk with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; p.Name
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;interface&lt;&#x2F;span&gt;&lt;span&gt; IStudent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;override &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.ClassRoom &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with&lt;&#x2F;span&gt;&lt;span&gt; get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; this.room
&lt;&#x2F;span&gt;&lt;span&gt;                                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;and set value = this.room &amp;lt;- value
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;调用接口&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;F#中对象必须显示的转换成接口才能调用接口成员
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= new&lt;&#x2F;span&gt;&lt;span&gt; Student&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; IPerson
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; i.Name
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;dui-xiang-biao-da-shi&quot;&gt;对象表达式&lt;&#x2F;h3&gt;
&lt;p&gt;匿名对象,与java中的类似，可以直接实现接口和抽象类&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span&gt; IComparer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;IPerson&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt; with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Compare&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;l&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; l.Age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; r.Age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif&lt;&#x2F;span&gt;&lt;span&gt; lAge &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; r.Age &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;kuo-zhan-fang-fa&quot;&gt;扩展方法&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;type System.Int32 with
&lt;&#x2F;span&gt;&lt;span&gt;    member this.ToHexString() = sprintf &amp;quot;0x%x&amp;quot; this;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;扩展方法必须定义在模块中，只能在F#中起作用，.net不能识别&lt;&#x2F;p&gt;
&lt;h3 id=&quot;kuo-zhan-mo-kuai&quot;&gt;扩展模块&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;只要名字相同就就是扩展
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;namespace &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;FSCollectionExtensions
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.Collections.Generic
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;module &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;List &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; Skips the first n elements of the list
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let rec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;skip n list &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; list &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _, []       -&amp;gt; []
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; list     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; list
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; hd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span&gt; tl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; skip &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;n &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span&gt; tl
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;mei-ju&quot;&gt;枚举&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;Color &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Red &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Green&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Black&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; int Color.Green &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;枚举值转换为int
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= enum&amp;lt;&lt;&#x2F;span&gt;&lt;span&gt;Color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;(&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;int转换为枚举值
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;jie-gou-ti&quot;&gt;结构体&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;[&amp;lt;Struct&amp;gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;StructPoint&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.X &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; x
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; y
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span&gt;StructRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;top &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;bottom &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;right &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; in
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;struct
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Top    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; top
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Bottom &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; bottom
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Left   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; left
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;member &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.Right &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; right
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;override &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;this.ToString&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;            sprintf &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; top bottom left right
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;不能使用隐式构造，不能重写默认构造；其它结构体同C#中的结构体表现一样。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;active-pattern&quot;&gt;Active Pattern&lt;&#x2F;h3&gt;
&lt;p&gt;Single-Case Active Patterns:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.IO
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let (|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FileExtension&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; filePath &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; Path.GetExtension&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;filePath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;定义了一个active pattern
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;determineFileType &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;filePath &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; filePath &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Without active patterns
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; filePath &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;when&lt;&#x2F;span&gt;&lt;span&gt; Path.GetExtension&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;filePath&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) = &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.txt&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;It is a text file.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Converting the data using an active pattern
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; FileExtension &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.jpg&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; FileExtension &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.png&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; FileExtension &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;.gif&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;It is an image file.&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Binding a new value
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; FileExtension ext
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Unknown file extension [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; ext
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Partial-Case Active Patterns: &#x2F;&#x2F;只匹配返回结果为Some(_)的值&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let (|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ToBool&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;success, result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; Boolean.TryParse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; success &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;            None
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let (|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ToInt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;success, result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; Int32.TryParse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;x&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; success &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;result&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt;            None
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;describeString str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; str &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; ToBool b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; is a bool with value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%b&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; str b     
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; ToInt   i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; is an integer with value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; str i
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _         -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; printfn &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; is not a bool, int, or float&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; str
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Parameterized Active Patterns:&#x2F;&#x2F;参数紧跟在pattern名称之后&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;open &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;System.Text.RegularExpressions
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Use a regular expression to capture three groups
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let (|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;RegexMatch3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;pattern &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;input &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; Regex.Match&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;input&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; pattern&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; result.Success &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match (&lt;&#x2F;span&gt;&lt;span&gt;List.tail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[ for&lt;&#x2F;span&gt;&lt;span&gt; g &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span&gt; result.Groups &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; g.Value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;]) with
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; fst &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span&gt; snd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span&gt; trd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:: []
&lt;&#x2F;span&gt;&lt;span&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Some &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;fst&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; snd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; trd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| [] -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; failwith &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;lt;| &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Match succeeded, but no groups found.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+
&lt;&#x2F;span&gt;&lt;span&gt;                            &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Use &amp;#39;(.*)&amp;#39; to capture groups&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _ -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; failwith &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Match succeeded, but did not find exactly three group&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;        None
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parseTime input &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;match&lt;&#x2F;span&gt;&lt;span&gt; input &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Match input of the form &amp;quot;6&#x2F;20&#x2F;2008&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; RegexMatch3 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(\d+)&#x2F;(\d+)&#x2F;(\d\d\d\d)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;month&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; day&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; year&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F; Match input of the form &amp;quot;2004-12-8&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; RegexMatch3 &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;(\d\d\d\d)-(\d+)-(\d+)&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;year&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; month&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; day&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;-&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;( new&lt;&#x2F;span&gt;&lt;span&gt; DateTime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;int year&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; int month&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt; int day&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) )
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _&lt;&#x2F;span&gt;&lt;span&gt; –&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; None
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Multi-Case Active Patterns:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;f#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-f# &quot;&gt;&lt;code class=&quot;language-f#&quot; data-lang=&quot;f#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let (|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; Hour &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; Minite &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; Second &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; Other &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;text&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) =
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;parts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; text.Split&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;#39;:&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; Array.length parts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;        Hour&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;int parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;],&lt;&#x2F;span&gt;&lt;span&gt;int parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;],&lt;&#x2F;span&gt;&lt;span&gt;int parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif&lt;&#x2F;span&gt;&lt;span&gt; Array.length parts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;        Minite&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;int parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;],&lt;&#x2F;span&gt;&lt;span&gt;int parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;elif&lt;&#x2F;span&gt;&lt;span&gt; Array.length parts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;then
&lt;&#x2F;span&gt;&lt;span&gt;        Second&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;int parts.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;])
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span&gt;        Other
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;seconds &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;=
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;function
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Hour &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; h&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;3600 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;60 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; s
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Minite &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;60 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; s
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;|&lt;&#x2F;span&gt;&lt;span&gt; Second &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;) -&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; s
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;| _ -&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记三</title>
        <published>2010-01-24T00:00:00+00:00</published>
        <updated>2010-01-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-3/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-3/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-3/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;数组：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;let x = [| 1;1;3;5|]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let x = [| 1..10 |]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let x = [| for i in 1..10 –&amp;gt; i*i |]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let y = x.[1]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;x.[1] &amp;lt;- 20
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z = x.[0..3]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z = x.[6..]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z = x.[..6]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z = x.[*]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let len = Array.length x
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let exists = Array.exists (fun item –&amp;gt; item&amp;gt;50) x         &#x2F;&#x2F;判断数组是否满足给定条件
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Array.init 根据索引初始化数组
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z = Array.init 10 (fun index –&amp;gt; index * 10)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Array.zeroCreate 使用默认值初始化数组
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z:int array = Array.zeroCreate 10          &#x2F;&#x2F;初始化为0
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z:string array = Array.zeroCreate 10      &#x2F;&#x2F;初始化为null
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;用于模式匹配：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let myMatch =
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     function
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     | null –&amp;gt; printf “匹配到null”
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     | [| |] –&amp;gt; printf “匹配到空数组”
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     | [| x |] –&amp;gt; printf “匹配到一个元素的数组”
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     | [| x;y |] –&amp;gt; printf “匹配到两个元素的数组”
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     | _ –&amp;gt; printf “匹配到更多元素的数组”
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;数组相等的判断
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;F#中数组相等比较的是数组的内容，而.net中比较的数组的引用
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let eq = [| 0;1;2 |] = [| 0..2 |]   &#x2F;&#x2F;相等
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let eq = [| 0;1;2 |] = [| 0..10 |] &#x2F;&#x2F;不等
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;规则数组
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let x:int [,] = Array2D.zeroCreate 3 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let y = x.[1,1]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;x.[1,1] &amp;lt;- 30
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let y = x.[*,1..2]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;不规则数组，数组的数组
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let x:int [][] = Array.zeroCreate 3;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;循环：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;while循环
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let mutable i= 10
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;while i&amp;gt;0 do
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printf “%d;” i
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      i &amp;lt;- i – 1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   for循环
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;for i = 1 to 10 do
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printf “%d;” i
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;for i = 10 downto 1 do
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printf “%d;” i
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;for i in 1..10 do
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       printf “%d;” i
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;F#中没有break和continue，要达到类似的目的，必须使用while语句。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;for循环中进行模式匹配：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; for a,b in [for x in 1..10 -&amp;gt; (x,x*x)] do printfn &amp;quot;%d&amp;quot; (a+b);;
&lt;&#x2F;span&gt;&lt;span&gt;2
&lt;&#x2F;span&gt;&lt;span&gt;6
&lt;&#x2F;span&gt;&lt;span&gt;12
&lt;&#x2F;span&gt;&lt;span&gt;20
&lt;&#x2F;span&gt;&lt;span&gt;30
&lt;&#x2F;span&gt;&lt;span&gt;42
&lt;&#x2F;span&gt;&lt;span&gt;56
&lt;&#x2F;span&gt;&lt;span&gt;72
&lt;&#x2F;span&gt;&lt;span&gt;90
&lt;&#x2F;span&gt;&lt;span&gt;110
&lt;&#x2F;span&gt;&lt;span&gt;val it : unit = ()
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;异常：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;自定义F#中的异常
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;exception WebSiteNotFound of string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;exception Timeout
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;捕捉和抛出异常
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;try
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      raise WebSiteNotFound(“http:&#x2F;&#x2F;myWebsite.com”)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;with
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;| :? FileNotFoundException
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       -&amp;gt; printf “.Net FileNotFoundException”
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;| :? IOException as ex
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     -&amp;gt; printf “.Net IOException:%s” ex.Message
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;| WebSiteNotFound(webSite)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     -&amp;gt; printf “F# WebSiteNotFound:%s” webSite
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;| Timeout
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    -&amp;gt; printf “F# Timeout”
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;| _ as ex
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    -&amp;gt; reraise ex   &#x2F;&#x2F;重新抛出异常
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;finally
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      printf “finally”
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记一</title>
        <published>2010-01-23T00:00:00+00:00</published>
        <updated>2010-01-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-1/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-1/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-1/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;注释：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;   &#x2F;&#x2F;单行注释
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  (*
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        多行注释
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   *)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   &#x2F;&#x2F;&#x2F;用于Visual Studio中文档注释
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Unit类型&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;   Unit类型只有一个值就是空元组()，可以认为是F#中的void类型。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   F#函数必须有返回值，当没有数据要返回时就默认返回unit。
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Option类型&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;   Option类型是可空类型。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   let y = None &#x2F;&#x2F;空值
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   let y= Some 20
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   Option.get &#x2F;&#x2F;获取值
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   Option.isSome y &#x2F;&#x2F;判断是否有值
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   Option.isNone y &#x2F;&#x2F;判断是否为空
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   用于模式匹配：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   let myMatch param =
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         match param with
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         | Some(20) -&amp;gt; printf &amp;quot;匹配到20&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         | Some(_) -&amp;gt; printf &amp;quot;匹配到值&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         | None -&amp;gt; printf &amp;quot;为空&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;function关键字：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;    用于只带一个参数的模式匹配，简化语句
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   如上面的myMatch函数可以简化为
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   let myMatch =
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         function
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         | Some(20) -&amp;gt; printf &amp;quot;匹配到20&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         | Some(_) -&amp;gt; printf &amp;quot;匹配到值&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;         | None -&amp;gt; printf &amp;quot;为空&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Tuple元组：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;      let x = 2,3,4 &#x2F;&#x2F;用逗号隔开，不加括号
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      let y = (4,5) &#x2F;&#x2F;加括号
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      当元组中有且仅有两个元素时可以用fst和snd函数来获取元组中的第一个和第二个元素。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      其他情况下用类似下面的方式来获取元组中的值
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      let x,y = 2,3       &#x2F;&#x2F;x = 2,y = 3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      let x,_ = 4,5       &#x2F;&#x2F;使用通配符，隐藏不想要的值
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;List列表：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;     let x = [2;3;4]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      let x = [ for i in 2..5 -&amp;gt; i*5 ] &#x2F;&#x2F;动态产生List
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     let x = [ for i in 2..5 do
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                      yield i*5]          &#x2F;&#x2F;动态产生List
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     let x = 30::x      &#x2F;&#x2F;使用::把一个元素连接到List的头部
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     用于模式匹配：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     let myMatch =
&lt;&#x2F;span&gt;&lt;span&gt;          function
&lt;&#x2F;span&gt;&lt;span&gt;          | [] -&amp;gt; printf &amp;quot;匹配空List&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;           &#x2F;&#x2F;| [x] -&amp;gt; printf &amp;quot;匹配含有一个元素的List&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;          | [x;y] -&amp;gt; printf &amp;quot;匹配含有两个元素的List&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;          | x::[] -&amp;gt; printf &amp;quot;匹配含有一个元素的List&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;          | _ -&amp;gt; printf &amp;quot;其他情况&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;自定义操作符：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;   操作符可以有以下字符“!%&amp;amp;*+-.&#x2F;&amp;lt;=&amp;gt;?@^|~”；还有“:”，它不能用在操作符第一个位置。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    有两个参数的操作符默认是中缀操作符，~!?开头的操作符是前缀操作符。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   let (@@) x = x*x
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   let (@@@) x y = x + y &#x2F;&#x2F;两个参数的操作符是中缀操作符
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   let (~@@@@) x y = x * y    &#x2F;&#x2F;~!?开头的操作符是前缀操作符
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;   可以在高阶函数中直接使用操作符，只需在操作符两边加上括号。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    List.reduce (@@@) [1..5]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    List.reduce (+) [1..5]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>《Programming F#》读书笔记二</title>
        <published>2010-01-23T00:00:00+00:00</published>
        <updated>2010-01-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-2/"/>
        <id>https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-2/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/life/reading/programming-fsharp/programming-fsharp-2/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-1&#x2F;&quot;&gt;《Programming F#》读书笔记一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-2&#x2F;&quot;&gt;《Programming F#》读书笔记二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-3&#x2F;&quot;&gt;《Programming F#》读书笔记三&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-4&#x2F;&quot;&gt;《Programming F#》读书笔记四&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-5&#x2F;&quot;&gt;《Programming F#》读书笔记五&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-6&#x2F;&quot;&gt;《Programming F#》读书笔记六&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-7&#x2F;&quot;&gt;《Programming F#》读书笔记七&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-8&#x2F;&quot;&gt;《Programming F#》读书笔记八&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-9&#x2F;&quot;&gt;《Programming F#》读书笔记九&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-10&#x2F;&quot;&gt;《Programming F#》读书笔记十&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-11&#x2F;&quot;&gt;《Programming F#》读书笔记十一&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;life&#x2F;reading&#x2F;programming-fsharp&#x2F;programming-fsharp-12&#x2F;&quot;&gt;《Programming F#》读书笔记十二&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;bi-ji&quot;&gt;笔记&lt;&#x2F;h2&gt;
&lt;p&gt;Discriminated Unions 可区分的联合类型&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;与C中的union很像，可以存储多种类型的数据，但是同时只能一种类型起作用。实际上它的每个case都是一个类，能用枚举的最好用枚举
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;type Color = Red | Green | White   &#x2F;&#x2F;定义了一个不能关联数据的联合
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;type Flower =
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       | Rose of Color
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       | Orchid of Color
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       | PaperFlower of string &#x2F;&#x2F;定义了一个可以关联数据的联合
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let redRose = Rose(Red)
&lt;&#x2F;span&gt;&lt;span&gt;let whiteOrchid = Orchid(White)
&lt;&#x2F;span&gt;&lt;span&gt;let paperRose = PaperFlower(&amp;quot;Rose&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;用于模式匹配：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let kindOfFlower =
&lt;&#x2F;span&gt;&lt;span&gt;function
&lt;&#x2F;span&gt;&lt;span&gt;| Rose(_) -&amp;gt; &amp;quot;Rose&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;| Orchid(_) -&amp;gt; &amp;quot;Orchid&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;| PaperFlower(_) -&amp;gt; &amp;quot;PaperFlower&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;联合还可以有方法和属性，下面为Flower定义一个属性:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;type Flower =
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       | Rose of Color
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       | Orchid of Color
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       | PaperFlower of string
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       member this.Value =
&lt;&#x2F;span&gt;&lt;span&gt;match this with
&lt;&#x2F;span&gt;&lt;span&gt;| Rose(_) -&amp;gt; &amp;quot;Rose&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;| Orchid(_) -&amp;gt; &amp;quot;Orchid&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;| PaperFlower(_) -&amp;gt; &amp;quot;PaperFlower&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Record类型&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;type Person = {Name:string;Age:int}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;隐式的创建一个Person对象
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let p1 = {Name=”Bob”;Age = 20}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;如果同时有多个定义相同的Record类型，就必须显示的指定为哪一个
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let p2:Person = {Name=”Bob”;Age=20}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;复制一个Record对象，这里必须使用with
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let p3 = {p2 with Age=22}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;用于模式匹配：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let filter =
&lt;&#x2F;span&gt;&lt;span&gt;function
&lt;&#x2F;span&gt;&lt;span&gt;| {Age=20} -&amp;gt; true &#x2F;&#x2F;匹配Age为20的Person对象
&lt;&#x2F;span&gt;&lt;span&gt;| _ -&amp;gt; false
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Record类型也可以有方法和属性
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       member this.Value = sprintf “{Name:%s;Age:%d}” this.Name this.Age
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Lazy延迟类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;使用函数创建
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let x = Lazy&amp;lt;int&amp;gt;.Create(fun() -&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;let a = p2.Age - 10
&lt;&#x2F;span&gt;&lt;span&gt;printfn &amp;quot;a=%d&amp;quot; a
&lt;&#x2F;span&gt;&lt;span&gt;a
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;使用表达式创建
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let y = lazy(x.Value + 10)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;当调用Value时才进行计算求值
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Seq序列类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;let rangs = seq { 1..5 } &#x2F;&#x2F;创建一个Seq
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Seq是.Net中的IEnumerable&amp;lt;T&amp;gt;的别名；与List类型的区别是Seq是延迟创建的，等到用时才按照定义创建迭代项;而List则在定义时就生成所有数据项。
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let rec allFiles dir =      &#x2F;&#x2F;递归遍历目录及子目录下所有文件
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;      seq { yield! Directory.GetFiles(dir)             &#x2F;&#x2F;seq是一个Computation Expression;yield!在seq中合并子序列的每一项到父序列
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;           for subDir in Directory.GetDirectories(dir) do
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;                 yield! allFiles subDir
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;     }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;默认值：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;使用Unchecked.defaultof&amp;lt;T&amp;gt; 来获取某种类型的默认值
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;引用类型未初始化时默认为null，引用类型不能赋值为null
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;type Animal =
&lt;&#x2F;span&gt;&lt;span&gt;val mutable name :string
&lt;&#x2F;span&gt;&lt;span&gt;new () =
&lt;&#x2F;span&gt;&lt;span&gt;{name = &amp;quot;default&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;new (n) ={name = n}
&lt;&#x2F;span&gt;&lt;span&gt;member this.Name = this.name
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let mutable a = new Animal()
&lt;&#x2F;span&gt;&lt;span&gt;a &amp;lt;- new Animal(&amp;quot;a2&amp;quot;)
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;a &amp;lt;- null &#x2F;&#x2F;这里会报错
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;mutable可变类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;let x = 2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;x &amp;lt;- 3 &#x2F;&#x2F;会报错，不是可变类型
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let mutable x = 2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;x &amp;lt;- 3 &#x2F;&#x2F;修改x值为3
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;使用mutable类型有限制：
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;mutable类型数据只可以在定义它的函数范围内使用，不包括内部函数
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let invalidUseOfMutable() =
&lt;&#x2F;span&gt;&lt;span&gt;    let mutable x = 0
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;let incrementX() = x &amp;lt;- x + 1 &#x2F;&#x2F;如果去掉注释会报错
&lt;&#x2F;span&gt;&lt;span&gt;    &#x2F;&#x2F;incrementX()
&lt;&#x2F;span&gt;&lt;span&gt;    x
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;mutable record:
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;type Person = {Name:string;mutable Age:int}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let p = {Name=”Sam”;Age = 20}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;p.Age &amp;lt;- 30 &#x2F;&#x2F;修改值
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;ref类型：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#c0c5ce;&quot;&gt;&lt;code&gt;&lt;span&gt;ref关键字将原先分配在stack上的值分配到heap上
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let x = 2
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let y = ref x &#x2F;&#x2F;通过变量来创建ref变量
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;y:=3 &#x2F;&#x2F;使用:=操作符来修改ref变量的值，修改y的值并不会改变x的值
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;let z = ref 3 &#x2F;&#x2F;通过字面值来创建ref类型
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>[WF4.0]工作流设计器Rehosting（二）</title>
        <published>2009-06-28T00:00:00+00:00</published>
        <updated>2009-06-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-2/"/>
        <id>https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-2/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-2/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-1&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（一）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-2&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（二）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-3&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（三）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zheng-wen&quot;&gt;正文&lt;&#x2F;h2&gt;
&lt;p&gt;新建一个WPf应用程序项目，&lt;&#x2F;p&gt;
&lt;p&gt;Window1.xaml&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;xml&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-xml &quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Window &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;x:Class&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;WF4Designer.Window1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;xmlns&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;schemas.microsoft.com&#x2F;winfx&#x2F;2006&#x2F;xaml&#x2F;presentation&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;xmlns:x&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;http:&#x2F;&#x2F;schemas.microsoft.com&#x2F;winfx&#x2F;2006&#x2F;xaml&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Title&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Window1&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Height&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Width&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Grid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;x:Name&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;gridview&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;       
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Grid&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Window&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Window1.xaml.cs&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Collections.Generic;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Linq;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Text;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Controls;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Data;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Documents;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Input;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Media;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Media.Imaging;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Navigation;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Shapes;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Activities.Design;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Activities.Statements;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;namespace &lt;&#x2F;span&gt;&lt;span&gt;WF4Designer
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; Interaction logic for Window1.xaml
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public partial class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Window1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Window
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Window1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;InitializeComponent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AddDesigner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;AddDesigner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;WorkflowDesigner();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Load&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Flowchart());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gridview&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Children&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;View&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;   }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;演示界面截图：
&lt;img src=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-2&#x2F;e774f61f0ffac645f724e429.jpg&quot; alt=&quot;e774f61f0ffac645f724e429.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;现在还不能进行设计，还没有添加工具箱和PropertyGrid视图。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>[WF4.0]工作流设计器Rehosting（三）</title>
        <published>2009-06-28T00:00:00+00:00</published>
        <updated>2009-06-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-3/"/>
        <id>https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-3/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-3/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-1&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（一）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-2&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（二）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-3&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（三）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zheng-wen&quot;&gt;正文&lt;&#x2F;h2&gt;
&lt;p&gt;可以看到工具箱和属性窗口，但是不能进行拖放设计，还需要注册活动外观，让设计器知道如何响应相关操作，修改Window1.xaml.cs文件&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Collections.Generic;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Linq;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Text;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Controls;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Data;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Documents;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Input;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Media;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Media.Imaging;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Navigation;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Shapes;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Activities.Design;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Activities.Design.Metadata;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Activities.Statements;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.ComponentModel;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Activities.Core.Design;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;namespace &lt;&#x2F;span&gt;&lt;span&gt;WF4Designer
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; Interaction logic for Window1.xaml
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public partial class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;Window1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Window
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Window1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;InitializeComponent&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AddDesigner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;AddDesigner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;注册活动外观
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;var builder = new AttributeTableBuilder();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;builder.AddCustomAttributes(typeof(Flowchart),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;                 new DesignerAttribute(typeof(SequenceDesigner)));
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;MetadataStore.AddAttributeTable(builder.CreateTable());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;DesignerMetadata().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Register&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;WorkflowDesigner();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Load&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Flowchart());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Grid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SetColumn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;View&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gridview&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Children&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;View&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            ToolboxControl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;toolbox &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;ToolboxControl();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;toolbox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Categories&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;ToolboxCategoryItemsCollection
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;ToolboxItemWrapper(&lt;&#x2F;span&gt;&lt;span&gt;typeof&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(FlowSwitch)),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;ToolboxItemWrapper(&lt;&#x2F;span&gt;&lt;span&gt;typeof&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(FlowDecision))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                });
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gridview&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Children&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;toolbox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Grid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SetColumn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;toolbox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Grid&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;SetColumn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PropertyInspectorView&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;gridview&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Children&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Add&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;PropertyInspectorView&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;           
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;现在能够进行拖放操作了，需要注意的是必须在加载工作流之前注册外观元数据，否则不起作用；另外没有找到FlowchartDesigner，不知道用哪一个Designer来对应Flowchart，还好在&lt;a href=&quot;http:&#x2F;&#x2F;social.msdn.microsoft.com&#x2F;Forums&#x2F;en-US&#x2F;wfprerelease&#x2F;thread&#x2F;e321cfff-706d-4d8e-860e-f2d83a84e0b4&quot;&gt;MSDN论坛&lt;&#x2F;a&gt;上看到有人解答了，使用new DesignerMetadata().Register()注册所有Designer，这样可以Rehosting Flowchart工作流。 &lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-3&#x2F;d05f51fb129bec306d22ebde.jpg&quot; alt=&quot;d05f51fb129bec306d22ebde.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>[WF4.0]工作流设计器Rehosting（一）</title>
        <published>2009-06-27T00:00:00+00:00</published>
        <updated>2009-06-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-1/"/>
        <id>https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-1/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/wf/wf4-designer-rehosting-1/">&lt;h2 id=&quot;suo-yin&quot;&gt;索引&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-1&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（一）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-2&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（二）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wf&#x2F;wf4-designer-rehosting-3&#x2F;&quot;&gt;[WF4.0]工作流设计器Rehosting（三）&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zheng-wen&quot;&gt;正文&lt;&#x2F;h2&gt;
&lt;p&gt;因为WF4.0使用WPF做可视化设计，能够利用WPF的数据绑定和其他一些内部实现，极大的简化了工作流设计器的开发工作；不用像3.5和3.0中那样，要开发一些服务类来支持工作流的设计操作。&lt;&#x2F;p&gt;
&lt;p&gt;首先看看WorkflowDesigner类的相关信息,WorkflowDesigner提供一个设计画布来呈现工作流模型。&lt;&#x2F;p&gt;
&lt;p&gt;System.Activities.Design.WorkflowDesigner&lt;&#x2F;p&gt;
&lt;p&gt;相关方法和属性&lt;&#x2F;p&gt;
&lt;p&gt;public object Deserializestring(string text)&lt;&#x2F;p&gt;
&lt;p&gt;从xaml工作流反序列化工作流对象&lt;&#x2F;p&gt;
&lt;p&gt;public void Flush()&lt;&#x2F;p&gt;
&lt;p&gt;保存工作流设计内容到Text属性&lt;&#x2F;p&gt;
&lt;p&gt;public bool IsInErrorState（）&lt;&#x2F;p&gt;
&lt;p&gt;是否处于错误状态&lt;&#x2F;p&gt;
&lt;p&gt;public void Load(object instance)&lt;&#x2F;p&gt;
&lt;p&gt;从工作流根活动对象加载到设计器&lt;&#x2F;p&gt;
&lt;p&gt;public void Load(string fileName)&lt;&#x2F;p&gt;
&lt;p&gt;从Xaml文件加载工作流到设计器&lt;&#x2F;p&gt;
&lt;p&gt;public void Save(string fileName)&lt;&#x2F;p&gt;
&lt;p&gt;保存为Xaml形式的工作流&lt;&#x2F;p&gt;
&lt;p&gt;public WorkflowDesigner()&lt;&#x2F;p&gt;
&lt;p&gt;构造函数&lt;&#x2F;p&gt;
&lt;p&gt;public System.Activities.Design.EditingContext Context{get;}&lt;&#x2F;p&gt;
&lt;p&gt;获取设计上下文对象，该对象包含一系列用于设计器和宿主交互的服务&lt;&#x2F;p&gt;
&lt;p&gt;public System.Windows.Controls.ContextMenu ContextMenu { get; }&lt;&#x2F;p&gt;
&lt;p&gt;设计器中活动的上下文菜单&lt;&#x2F;p&gt;
&lt;p&gt;public System.Activities.Design.Debug.IDesignerDebugView DebugManagerView { get; }&lt;&#x2F;p&gt;
&lt;p&gt;提供运行时调试服务对象&lt;&#x2F;p&gt;
&lt;p&gt;public string PropertyGridFontAndColorData { set; }&lt;&#x2F;p&gt;
&lt;p&gt;设置PropertyGrid字体和颜色&lt;&#x2F;p&gt;
&lt;p&gt;public System.Windows.UIElement PropertyInspectorView { get; }&lt;&#x2F;p&gt;
&lt;p&gt;提供PropertyGrid视图&lt;&#x2F;p&gt;
&lt;p&gt;public string Text { set; get; }&lt;&#x2F;p&gt;
&lt;p&gt;获取和设置Xaml工作流内容&lt;&#x2F;p&gt;
&lt;p&gt;public System.Windows.UIElement View { get; }&lt;&#x2F;p&gt;
&lt;p&gt;提供工作流可视化设计视图&lt;&#x2F;p&gt;
&lt;p&gt;public event System.Windows.Controls.TextChangedEventHandler TextChanged&lt;&#x2F;p&gt;
&lt;p&gt;当Text属性内容改变时触发&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>Wpf应用程序进入全屏和退出全屏</title>
        <published>2009-06-24T00:00:00+00:00</published>
        <updated>2009-06-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/wpf-fullscreen/"/>
        <id>https://blog.dotone.top/blog/it/wpf-fullscreen/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/wpf-fullscreen/">&lt;p&gt;因为想尝试一下使Wpf应用程序的全屏状态，但是Wpf没有全屏操作的直接实现，在网上搜索一下，发现很多都是使用pinvoke调用win32动态链接库来实现，而且功能也不全，当发现参考文章中的内容时，发现了全屏的简单方法，而且也不用使用Pinvoke，随即修改和完善了功能，代码如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Forms;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;using &lt;&#x2F;span&gt;&lt;span&gt;System.Windows.Interop;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;namespace &lt;&#x2F;span&gt;&lt;span&gt;PhotoViewer
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F; Wpf应用程序全屏辅助类
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F; ——全部使用.Net类进行操作
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F; ——可进入全屏和退出全屏
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F; ——可恢复到全屏前的状态
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F; ——全屏时可切换到其他应用程序
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;    &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public static class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;FullScreenHelper
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Window &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_fullWindow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;WindowState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;WindowStyle &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowStyle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private static bool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowTopMost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;ResizeMode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowResizeMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private static &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Rect &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; 进入全屏
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;window&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;GoFullscreen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;this &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Window &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;已经是全屏
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IsFullscreen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;存储窗体信息
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowState &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowStyle &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowStyle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowTopMost &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Topmost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowResizeMode &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ResizeMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;X &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Y &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Width &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Height &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;变成无边窗体
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowState &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Normal&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;假如已经是Maximized，就不能进入全屏，所以这里先调整状态
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowStyle &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowStyle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ResizeMode &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ResizeMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;NoResize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Topmost &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;最大化后总是在最上面
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;获取窗口句柄
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;handle &lt;&#x2F;span&gt;&lt;span&gt;= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;WindowInteropHelper(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Handle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;获取当前显示器屏幕
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            Screen &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;screen &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Screen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;FromHandle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;handle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;调整窗口最大化,全屏的关键代码就是下面3句
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;MaxWidth &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;screen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Bounds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;MaxHeight &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;screen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Bounds&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowState &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Maximized&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;           
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;解决切换应用程序的问题
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Activated &lt;&#x2F;span&gt;&lt;span&gt;+= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;EventHandler(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window_Activated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Deactivated &lt;&#x2F;span&gt;&lt;span&gt;+= new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;EventHandler(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window_Deactivated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;记住成功最大化的窗体
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_fullWindow &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;window_Deactivated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;object &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, EventArgs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sender &lt;&#x2F;span&gt;&lt;span&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Window;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Topmost &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;window_Activated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;object &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sender&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, EventArgs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sender &lt;&#x2F;span&gt;&lt;span&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Window;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Topmost &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; 退出全屏
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;window&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;ExitFullscreen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;this &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Window &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;已经不是全屏无操作
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;IsFullscreen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;恢复窗口先前信息，这样就退出了全屏
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Topmost &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowTopMost&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowStyle &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowStyle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ResizeMode &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ResizeMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CanResize&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;设置为可调整窗体大小
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Left &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Width &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Top &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Height &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowRect&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WindowState &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;恢复窗口状态信息
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ResizeMode &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_windowResizeMode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;恢复窗口可调整信息
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;移除不需要的事件
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Activated &lt;&#x2F;span&gt;&lt;span&gt;-= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window_Activated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Deactivated &lt;&#x2F;span&gt;&lt;span&gt;-= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window_Deactivated&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_fullWindow &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; 窗体是否在全屏状态
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;&amp;quot;window&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;param&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;        &#x2F;&#x2F;&#x2F; &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;returns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;returns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public static bool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;IsFullscreen&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;this &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Window &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;throw &lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;ArgumentNullException(&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;_fullWindow &lt;&#x2F;span&gt;&lt;span&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;还有一个不爽的问题是，在最大化时如果已经是最大化状态，必须先退出最大化状态，造成多闪烁一次，目前还没有找到解决方法。&lt;&#x2F;p&gt;
&lt;p&gt;演示程序截图&lt;&#x2F;p&gt;
&lt;p&gt;非全屏状态：
&lt;img src=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wpf-fullscreen&#x2F;c3efa7cc62fff93601e9281b.jpg&quot; alt=&quot;c3efa7cc62fff93601e9281b.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;全屏状态：
&lt;img src=&quot;https:&#x2F;&#x2F;blog.dotone.top&#x2F;blog&#x2F;it&#x2F;wpf-fullscreen&#x2F;bc3dddf9230f147f252df21b.jpg&quot; alt=&quot;bc3dddf9230f147f252df21b.jpg&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao-wen-zhang&quot;&gt;参考文章&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;http:&#x2F;&#x2F;www.swart.ws&#x2F;2009&#x2F;03&#x2F;kiosk-full-screen-wpf-applications.html&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>[WF4.0]Windows Workflow 4.0初体验</title>
        <published>2009-06-03T00:00:00+00:00</published>
        <updated>2009-06-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/wf/try-wf4/"/>
        <id>https://blog.dotone.top/blog/it/wf/try-wf4/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/wf/try-wf4/">&lt;p&gt;最近在虚拟机中安装了Visual Studio 2010。界面是WPF的，CPU和内存占用不是很夸张,打开一个很简单的附带的Lab Project, CPU使用率一般在20%一下，内存使用不到800M。&lt;&#x2F;p&gt;
&lt;p&gt;言归正传，还是来介绍Windows Workflow 4.0。&lt;&#x2F;p&gt;
&lt;p&gt;与3.5相比工作流模型有了很大改变和不同。&lt;&#x2F;p&gt;
&lt;p&gt;我们知道3.5中工作流都是托管在WorkflowRuntime中的，通过WorkflowRuntime来创建、执行工作流实例；在4.0中没有WorkflowRuntime类，可以方便的直接创建WorkflowInstance实例和执行工作流。Lab中代码如下：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;WorkflowInstance &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;myInstance &lt;&#x2F;span&gt;&lt;span&gt;= new WorkflowInstance(new SayHello(),
&lt;&#x2F;span&gt;&lt;span&gt;    new SayHelloInArgs(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;userName&lt;&#x2F;span&gt;&lt;span&gt;));
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;myInstance&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OnCompleted &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;delegate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WorkflowCompletedEventArgs e&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;*** OnCompleted delegate is running on thread &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;{0}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt; ***&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Thread&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;CurrentThread&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ManagedThreadId&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    SayHelloOutArgs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;outArgs &lt;&#x2F;span&gt;&lt;span&gt;= new SayHelloOutArgs(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Outputs&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;greeting &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;outArgs&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Greeting&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;syncEvent&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Set&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;myInstance&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OnUnhandledException &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;delegate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WorkflowUnhandledExceptionEventArgs e&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UnhandledException&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ToString&lt;&#x2F;span&gt;&lt;span&gt;());
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;UnhandledExceptionAction&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Terminate&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;myInstance&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;OnAborted &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;delegate&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WorkflowAbortedEventArgs e&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Console&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WriteLine&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Reason&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;syncEvent&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Set&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;myInstance&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Run&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;4.0中有一个WorkflowInvoker类，这个类也可以执行工作流，只不过这个类是用来测试工作流的，这很大的改进了前一版本中工作流难以测试的问题。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;        [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TestMethod&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;ShouldReturnGreetingWithName&lt;&#x2F;span&gt;&lt;span&gt;()
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            Dictionary&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;object&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;input &lt;&#x2F;span&gt;&lt;span&gt;= new Dictionary&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;object&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;()
&lt;&#x2F;span&gt;&lt;span&gt;            {
&lt;&#x2F;span&gt;&lt;span&gt;                {&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;UserName&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Test&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;}
&lt;&#x2F;span&gt;&lt;span&gt;            };
&lt;&#x2F;span&gt;&lt;span&gt;            IDictionary&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;object&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;output&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;output &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WorkflowInvoker&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Invoke&lt;&#x2F;span&gt;&lt;span&gt;(new SayHello(), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;input&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Assert&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;AreEqual&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello, Test from Workflow 4&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;output&lt;&#x2F;span&gt;&lt;span&gt;[&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Greeting&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;]);
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;3.5中Activity是所有活动的基类，要实现自定义活动，只需重写Activity 的Execute()方法；在4.0中所有的活动都是从抽象类WorkflowElement派生出来的，而且Visual Studio中默认自定义活动都是从CodeActivity或CodeActivity&lt;T&gt;继承的，相似的是也需要重写Execute()方法，从而实现自定义执行逻辑。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;MyActivity1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;CodeActivity
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;protected override void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Execute&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(CodeActivityContext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;你的实现代码
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;当然，你还是可以从Activity派生自定义活动，不过与3.5有很大不同。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;SayHelloInCode &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Activity
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;protected override &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;WorkflowElement &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;CreateBody&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;Sequence()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Activities &lt;&#x2F;span&gt;&lt;span&gt;=
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    &lt;&#x2F;span&gt;&lt;span&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;WriteLine()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Text &lt;&#x2F;span&gt;&lt;span&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello Workflow 4 in code&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            };
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;4.0中新增加的工作流服务功能，可以直接把工作流发布为WCF服务，当然工作流也必须设计为具有WCF应答功能才行。4.0提供4个与WCF相关的活动：Receive、ReceiveReply、Send、SendReply，通过这些活动可以可视化定义WCF的服务操作。
4.0中实现了工作流设计器的基本模型，可以很容易的实现自定义设计器。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh">
        <title>[WF3.5]如何判断活动在设计时还是在运行时</title>
        <published>2009-03-25T00:00:00+00:00</published>
        <updated>2009-03-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://blog.dotone.top/blog/it/wf-determine-design-time-or-runtime/"/>
        <id>https://blog.dotone.top/blog/it/wf-determine-design-time-or-runtime/</id>
        
        <content type="html" xml:base="https://blog.dotone.top/blog/it/wf-determine-design-time-or-runtime/">&lt;p&gt;Rehosting工作流设计器,有时需要判断活动是在运行时还是在设计时，比如说对活动进行验证时，可以通过获取自定义服务来判断。&lt;&#x2F;p&gt;
&lt;p&gt;以下是一个自定义ActivityValidator：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;c#&quot; style=&quot;background-color:#2b303b;color:#c0c5ce;&quot; class=&quot;language-c# &quot;&gt;&lt;code class=&quot;language-c#&quot; data-lang=&quot;c#&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#ebcb8b;&quot;&gt;ActionValidator &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;ActivityValidator
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public override &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;ValidationErrorCollection &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;Validate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(ValidationManager &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;manager&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;object &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            .......
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;           
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            MarkupOnlyWorkflow &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;root &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ActivityHelper&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GetRootActivity&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;action&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;MarkupOnlyWorkflow;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            TemplateWrapper &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wrapper &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(TemplateWrapper)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;manager&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GetService&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span&gt;typeof&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(TemplateWrapper));
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            WorkflowTemplate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;template &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wrapper &lt;&#x2F;span&gt;&lt;span&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;运行时
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;template &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;EntityUtilities&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GetInstance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;GetWorkflowTemplate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;root&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TemplateId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;设计时
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;template &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;wrapper&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;WorkflowTemplate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#65737e;&quot;&gt;&#x2F;&#x2F;进行相关操作
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;            .......
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eff1f5;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;从我的百度空间导入&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
